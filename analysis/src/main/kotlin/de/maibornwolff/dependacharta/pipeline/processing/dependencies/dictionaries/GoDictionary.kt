package de.maibornwolff.dependacharta.pipeline.processing.dependencies.dictionaries

import de.maibornwolff.dependacharta.pipeline.analysis.model.Path

class GoDictionary : LanguageDictionary {
    override fun get() = goDictionary

    companion object {
        private val goDictionary = mapOf(
            // Keywords
            "break" to Path(listOf("break")),
            "case" to Path(listOf("case")),
            "chan" to Path(listOf("chan")),
            "const" to Path(listOf("const")),
            "continue" to Path(listOf("continue")),
            "default" to Path(listOf("default")),
            "defer" to Path(listOf("defer")),
            "else" to Path(listOf("else")),
            "fallthrough" to Path(listOf("fallthrough")),
            "for" to Path(listOf("for")),
            "func" to Path(listOf("func")),
            "go" to Path(listOf("go")),
            "goto" to Path(listOf("goto")),
            "if" to Path(listOf("if")),
            "import" to Path(listOf("import")),
            "interface" to Path(listOf("interface")),
            "map" to Path(listOf("map")),
            "package" to Path(listOf("package")),
            "range" to Path(listOf("range")),
            "return" to Path(listOf("return")),
            "select" to Path(listOf("select")),
            "struct" to Path(listOf("struct")),
            "switch" to Path(listOf("switch")),
            "type" to Path(listOf("type")),
            "var" to Path(listOf("var")),
            // Builtin identifiers - types, constants, functions
            "bool" to Path(listOf("bool")),
            "byte" to Path(listOf("byte")),
            "complex64" to Path(listOf("complex64")),
            "complex128" to Path(listOf("complex128")),
            "error" to Path(listOf("error")),
            "float32" to Path(listOf("float32")),
            "float64" to Path(listOf("float64")),
            "int" to Path(listOf("int")),
            "int8" to Path(listOf("int8")),
            "int16" to Path(listOf("int16")),
            "int32" to Path(listOf("int32")),
            "int64" to Path(listOf("int64")),
            "rune" to Path(listOf("rune")),
            "string" to Path(listOf("string")),
            "uint" to Path(listOf("uint")),
            "uint8" to Path(listOf("uint8")),
            "uint16" to Path(listOf("uint16")),
            "uint32" to Path(listOf("uint32")),
            "uint64" to Path(listOf("uint64")),
            "uintptr" to Path(listOf("uintptr")),
            "any" to Path(listOf("any")),
            "comparable" to Path(listOf("comparable")),
            "true" to Path(listOf("true")),
            "false" to Path(listOf("false")),
            "iota" to Path(listOf("iota")),
            "nil" to Path(listOf("nil")),
            "append" to Path(listOf("append")),
            "cap" to Path(listOf("cap")),
            "close" to Path(listOf("close")),
            "complex" to Path(listOf("complex")),
            "copy" to Path(listOf("copy")),
            "delete" to Path(listOf("delete")),
            "imag" to Path(listOf("imag")),
            "len" to Path(listOf("len")),
            "make" to Path(listOf("make")),
            "new" to Path(listOf("new")),
            "panic" to Path(listOf("panic")),
            "print" to Path(listOf("print")),
            "println" to Path(listOf("println")),
            "real" to Path(listOf("real")),
            "recover" to Path(listOf("recover")),
            "clear" to Path(listOf("clear")),
            "max" to Path(listOf("max")),
            "min" to Path(listOf("min")),
            "fmt" to Path(listOf("fmt")),
            "os" to Path(listOf("os")),
            "io" to Path(listOf("io")),
            "net" to Path(listOf("net")),
            "http" to Path(listOf("net", "http")),
            "context" to Path(listOf("context")),
            "sync" to Path(listOf("sync")),
            "time" to Path(listOf("time")),
            "json" to Path(listOf("encoding", "json")),
            "xml" to Path(listOf("encoding", "xml")),
            "base64" to Path(listOf("encoding", "base64")),
            "hex" to Path(listOf("encoding", "hex")),
            "url" to Path(listOf("net", "url")),
            "filepath" to Path(listOf("path", "filepath")),
            "strings" to Path(listOf("strings")),
            "strconv" to Path(listOf("strconv")),
            "regexp" to Path(listOf("regexp")),
            "sort" to Path(listOf("sort")),
            "math" to Path(listOf("math")),
            "rand" to Path(listOf("math", "rand")),
            "log" to Path(listOf("log")),
            "crypto" to Path(listOf("crypto")),
            "hash" to Path(listOf("hash")),
            "bufio" to Path(listOf("bufio")),
            "bytes" to Path(listOf("bytes")),
            "reflect" to Path(listOf("reflect")),
            "runtime" to Path(listOf("runtime")),
            // Archive packages
            "tar" to Path(listOf("archive", "tar")),
            "zip" to Path(listOf("archive", "zip")),
            "archive/tar" to Path(listOf("archive", "tar")),
            "archive/zip" to Path(listOf("archive", "zip")),
            // Compression packages
            "compress/bzip2" to Path(listOf("compress", "bzip2")),
            "compress/flate" to Path(listOf("compress", "flate")),
            "compress/gzip" to Path(listOf("compress", "gzip")),
            "compress/lzw" to Path(listOf("compress", "lzw")),
            "compress/zlib" to Path(listOf("compress", "zlib")),
            "bzip2" to Path(listOf("compress", "bzip2")),
            "flate" to Path(listOf("compress", "flate")),
            "gzip" to Path(listOf("compress", "gzip")),
            "lzw" to Path(listOf("compress", "lzw")),
            "zlib" to Path(listOf("compress", "zlib")),
            // Container packages
            "heap" to Path(listOf("container", "heap")),
            "list" to Path(listOf("container", "list")),
            "ring" to Path(listOf("container", "ring")),
            "container/heap" to Path(listOf("container", "heap")),
            "container/list" to Path(listOf("container", "list")),
            "container/ring" to Path(listOf("container", "ring")),
            // Crypto packages
            "aes" to Path(listOf("crypto", "aes")),
            "cipher" to Path(listOf("crypto", "cipher")),
            "des" to Path(listOf("crypto", "des")),
            "dsa" to Path(listOf("crypto", "dsa")),
            "ecdh" to Path(listOf("crypto", "ecdh")),
            "ecdsa" to Path(listOf("crypto", "ecdsa")),
            "ed25519" to Path(listOf("crypto", "ed25519")),
            "elliptic" to Path(listOf("crypto", "elliptic")),
            "hmac" to Path(listOf("crypto", "hmac")),
            "md5" to Path(listOf("crypto", "md5")),
            "rand" to Path(listOf("crypto", "rand")),
            "rc4" to Path(listOf("crypto", "rc4")),
            "rsa" to Path(listOf("crypto", "rsa")),
            "sha1" to Path(listOf("crypto", "sha1")),
            "sha256" to Path(listOf("crypto", "sha256")),
            "sha512" to Path(listOf("crypto", "sha512")),
            "subtle" to Path(listOf("crypto", "subtle")),
            "tls" to Path(listOf("crypto", "tls")),
            "x509" to Path(listOf("crypto", "x509")),
            // Database packages
            "sql" to Path(listOf("database", "sql")),
            "database/sql" to Path(listOf("database", "sql")),
            // Encoding packages
            "ascii85" to Path(listOf("encoding", "ascii85")),
            "asn1" to Path(listOf("encoding", "asn1")),
            "binary" to Path(listOf("encoding", "binary")),
            "csv" to Path(listOf("encoding", "csv")),
            "gob" to Path(listOf("encoding", "gob")),
            "pem" to Path(listOf("encoding", "pem")),
            "encoding/ascii85" to Path(listOf("encoding", "ascii85")),
            "encoding/asn1" to Path(listOf("encoding", "asn1")),
            "encoding/base32" to Path(listOf("encoding", "base32")),
            "encoding/base64" to Path(listOf("encoding", "base64")),
            "encoding/binary" to Path(listOf("encoding", "binary")),
            "encoding/csv" to Path(listOf("encoding", "csv")),
            "encoding/gob" to Path(listOf("encoding", "gob")),
            "encoding/hex" to Path(listOf("encoding", "hex")),
            "encoding/json" to Path(listOf("encoding", "json")),
            "encoding/pem" to Path(listOf("encoding", "pem")),
            "encoding/xml" to Path(listOf("encoding", "xml")),
            // Testing packages
            "testing" to Path(listOf("testing")),
            "quick" to Path(listOf("testing", "quick")),
            "testing/quick" to Path(listOf("testing", "quick")),
            // Text packages
            "scanner" to Path(listOf("text", "scanner")),
            "tabwriter" to Path(listOf("text", "tabwriter")),
            "template" to Path(listOf("text", "template")),
            "text/scanner" to Path(listOf("text", "scanner")),
            "text/tabwriter" to Path(listOf("text", "tabwriter")),
            "text/template" to Path(listOf("text", "template")),
            // HTML template
            "html/template" to Path(listOf("html", "template")),
            // Path packages
            "path" to Path(listOf("path")),
            "path/filepath" to Path(listOf("path", "filepath")),
            // Net packages
            "mail" to Path(listOf("net", "mail")),
            "rpc" to Path(listOf("net", "rpc")),
            "smtp" to Path(listOf("net", "smtp")),
            "textproto" to Path(listOf("net", "textproto")),
            "net/http" to Path(listOf("net", "http")),
            "net/mail" to Path(listOf("net", "mail")),
            "net/rpc" to Path(listOf("net", "rpc")),
            "net/smtp" to Path(listOf("net", "smtp")),
            "net/textproto" to Path(listOf("net", "textproto")),
            "net/url" to Path(listOf("net", "url")),
            // HTTP specific packages
            "cgi" to Path(listOf("net", "http", "cgi")),
            "cookiejar" to Path(listOf("net", "http", "cookiejar")),
            "fcgi" to Path(listOf("net", "http", "fcgi")),
            "httptest" to Path(listOf("net", "http", "httptest")),
            "httptrace" to Path(listOf("net", "http", "httptrace")),
            "httputil" to Path(listOf("net", "http", "httputil")),
            "pprof" to Path(listOf("net", "http", "pprof")),
            // OS packages
            "exec" to Path(listOf("os", "exec")),
            "signal" to Path(listOf("os", "signal")),
            "user" to Path(listOf("os", "user")),
            "os/exec" to Path(listOf("os", "exec")),
            "os/signal" to Path(listOf("os", "signal")),
            "os/user" to Path(listOf("os", "user"))
        )
    }
}