{
  "projectTreeRoots": [
    {
      "name": "cypress_config",
      "children": [
        {
          "leafId": "cypress_config.cypress_config_DEFAULT_EXPORT",
          "name": "cypress_config_DEFAULT_EXPORT",
          "children": [],
          "level": 0,
          "containedLeaves": [
            "cypress_config.cypress_config_DEFAULT_EXPORT"
          ],
          "containedInternalDependencies": {}
        }
      ],
      "level": 0,
      "containedLeaves": [
        "cypress_config.cypress_config_DEFAULT_EXPORT"
      ],
      "containedInternalDependencies": {}
    },
    {
      "name": "src",
      "children": [
        {
          "name": "app",
          "children": [
            {
              "name": "common",
              "children": [
                {
                  "name": "utils",
                  "children": [
                    {
                      "leafId": "src.app.common.utils.addTo",
                      "name": "addTo",
                      "children": [],
                      "level": 0,
                      "containedLeaves": [
                        "src.app.common.utils.addTo"
                      ],
                      "containedInternalDependencies": {}
                    },
                    {
                      "leafId": "src.app.common.utils.replaceIfBigger",
                      "name": "replaceIfBigger",
                      "children": [],
                      "level": 0,
                      "containedLeaves": [
                        "src.app.common.utils.replaceIfBigger"
                      ],
                      "containedInternalDependencies": {}
                    },
                    {
                      "leafId": "src.app.common.utils.getElementOrZeroIfNotExists",
                      "name": "getElementOrZeroIfNotExists",
                      "children": [],
                      "level": 0,
                      "containedLeaves": [
                        "src.app.common.utils.getElementOrZeroIfNotExists"
                      ],
                      "containedInternalDependencies": {}
                    },
                    {
                      "leafId": "src.app.common.utils.sumUpTo",
                      "name": "sumUpTo",
                      "children": [],
                      "level": 0,
                      "containedLeaves": [
                        "src.app.common.utils.sumUpTo"
                      ],
                      "containedInternalDependencies": {}
                    }
                  ],
                  "level": 0,
                  "containedLeaves": [
                    "src.app.common.utils.addTo",
                    "src.app.common.utils.replaceIfBigger",
                    "src.app.common.utils.getElementOrZeroIfNotExists",
                    "src.app.common.utils.sumUpTo"
                  ],
                  "containedInternalDependencies": {}
                }
              ],
              "level": 0,
              "containedLeaves": [
                "src.app.common.utils.addTo",
                "src.app.common.utils.replaceIfBigger",
                "src.app.common.utils.getElementOrZeroIfNotExists",
                "src.app.common.utils.sumUpTo"
              ],
              "containedInternalDependencies": {}
            },
            {
              "name": "model",
              "children": [
                {
                  "name": "ShallowGraphEdge",
                  "children": [
                    {
                      "leafId": "src.app.model.ShallowGraphEdge.ShallowGraphEdge",
                      "name": "ShallowGraphEdge",
                      "children": [],
                      "level": 0,
                      "containedLeaves": [
                        "src.app.model.ShallowGraphEdge.ShallowGraphEdge"
                      ],
                      "containedInternalDependencies": {}
                    }
                  ],
                  "level": 0,
                  "containedLeaves": [
                    "src.app.model.ShallowGraphEdge.ShallowGraphEdge"
                  ],
                  "containedInternalDependencies": {}
                },
                {
                  "name": "GraphNode",
                  "children": [
                    {
                      "leafId": "src.app.model.GraphNode.GraphNode",
                      "name": "GraphNode",
                      "children": [],
                      "level": 0,
                      "containedLeaves": [
                        "src.app.model.GraphNode.GraphNode"
                      ],
                      "containedInternalDependencies": {
                        "src.app.model.ShallowGraphEdge.ShallowGraphEdge": {
                          "isCyclic": false,
                          "weight": 1
                        }
                      }
                    },
                    {
                      "leafId": "src.app.model.GraphNode.VisibleGraphNode",
                      "name": "VisibleGraphNode",
                      "children": [],
                      "level": 1,
                      "containedLeaves": [
                        "src.app.model.GraphNode.VisibleGraphNode"
                      ],
                      "containedInternalDependencies": {
                        "src.app.model.GraphNode.GraphNode": {
                          "isCyclic": false,
                          "weight": 1
                        }
                      }
                    },
                    {
                      "leafId": "src.app.model.GraphNode.getNodeAndAllChildrenRecursively",
                      "name": "getNodeAndAllChildrenRecursively",
                      "children": [],
                      "level": 1,
                      "containedLeaves": [
                        "src.app.model.GraphNode.getNodeAndAllChildrenRecursively"
                      ],
                      "containedInternalDependencies": {
                        "src.app.model.GraphNode.GraphNode": {
                          "isCyclic": false,
                          "weight": 1
                        }
                      }
                    },
                    {
                      "leafId": "src.app.model.GraphNode.getSuccessorIds",
                      "name": "getSuccessorIds",
                      "children": [],
                      "level": 2,
                      "containedLeaves": [
                        "src.app.model.GraphNode.getSuccessorIds"
                      ],
                      "containedInternalDependencies": {
                        "src.app.model.GraphNode.GraphNode": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.GraphNode.getNodeAndAllChildrenRecursively": {
                          "isCyclic": false,
                          "weight": 1
                        }
                      }
                    },
                    {
                      "leafId": "src.app.model.GraphNode.recursiveFind",
                      "name": "recursiveFind",
                      "children": [],
                      "level": 2,
                      "containedLeaves": [
                        "src.app.model.GraphNode.recursiveFind"
                      ],
                      "containedInternalDependencies": {
                        "src.app.model.GraphNode.VisibleGraphNode": {
                          "isCyclic": false,
                          "weight": 1
                        }
                      }
                    }
                  ],
                  "level": 1,
                  "containedLeaves": [
                    "src.app.model.GraphNode.GraphNode",
                    "src.app.model.GraphNode.VisibleGraphNode",
                    "src.app.model.GraphNode.getNodeAndAllChildrenRecursively",
                    "src.app.model.GraphNode.getSuccessorIds",
                    "src.app.model.GraphNode.recursiveFind"
                  ],
                  "containedInternalDependencies": {
                    "src.app.model.ShallowGraphEdge.ShallowGraphEdge": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.GraphNode.GraphNode": {
                      "isCyclic": false,
                      "weight": 3
                    },
                    "src.app.model.GraphNode.getNodeAndAllChildrenRecursively": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.GraphNode.VisibleGraphNode": {
                      "isCyclic": false,
                      "weight": 1
                    }
                  }
                },
                {
                  "name": "GraphEdge",
                  "children": [
                    {
                      "leafId": "src.app.model.GraphEdge.GraphEdge",
                      "name": "GraphEdge",
                      "children": [],
                      "level": 0,
                      "containedLeaves": [
                        "src.app.model.GraphEdge.GraphEdge"
                      ],
                      "containedInternalDependencies": {
                        "src.app.model.GraphNode.VisibleGraphNode": {
                          "isCyclic": false,
                          "weight": 1
                        }
                      }
                    }
                  ],
                  "level": 2,
                  "containedLeaves": [
                    "src.app.model.GraphEdge.GraphEdge"
                  ],
                  "containedInternalDependencies": {
                    "src.app.model.GraphNode.VisibleGraphNode": {
                      "isCyclic": false,
                      "weight": 1
                    }
                  }
                },
                {
                  "name": "service",
                  "children": [
                    {
                      "name": "feedbackEdge",
                      "children": [
                        {
                          "leafId": "src.app.model.service.feedbackEdge.findGreatestCommonAncestor",
                          "name": "findGreatestCommonAncestor",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.model.service.feedbackEdge.findGreatestCommonAncestor"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphNode.GraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.feedbackEdge.isPointingUpwards",
                          "name": "isPointingUpwards",
                          "children": [],
                          "level": 1,
                          "containedLeaves": [
                            "src.app.model.service.feedbackEdge.isPointingUpwards"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphEdge.GraphEdge": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.GraphNode.GraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.feedbackEdge.findGreatestCommonAncestor": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.feedbackEdge.isTwistedEdge",
                          "name": "isTwistedEdge",
                          "children": [],
                          "level": 2,
                          "containedLeaves": [
                            "src.app.model.service.feedbackEdge.isTwistedEdge"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphEdge.GraphEdge": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.feedbackEdge.isPointingUpwards": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.feedbackEdge.isFeedbackEdge",
                          "name": "isFeedbackEdge",
                          "children": [],
                          "level": 2,
                          "containedLeaves": [
                            "src.app.model.service.feedbackEdge.isFeedbackEdge"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphEdge.GraphEdge": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.feedbackEdge.isPointingUpwards": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        }
                      ],
                      "level": 0,
                      "containedLeaves": [
                        "src.app.model.service.feedbackEdge.findGreatestCommonAncestor",
                        "src.app.model.service.feedbackEdge.isPointingUpwards",
                        "src.app.model.service.feedbackEdge.isTwistedEdge",
                        "src.app.model.service.feedbackEdge.isFeedbackEdge"
                      ],
                      "containedInternalDependencies": {
                        "src.app.model.GraphNode.GraphNode": {
                          "isCyclic": false,
                          "weight": 2
                        },
                        "src.app.model.GraphEdge.GraphEdge": {
                          "isCyclic": false,
                          "weight": 3
                        },
                        "src.app.model.service.feedbackEdge.findGreatestCommonAncestor": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.feedbackEdge.isPointingUpwards": {
                          "isCyclic": false,
                          "weight": 2
                        }
                      }
                    },
                    {
                      "name": "lsmLayouting",
                      "children": [
                        {
                          "leafId": "src.app.model.service.lsmLayouting.PADDING_BETWEEN_NODES",
                          "name": "PADDING_BETWEEN_NODES",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.model.service.lsmLayouting.PADDING_BETWEEN_NODES"
                          ],
                          "containedInternalDependencies": {}
                        },
                        {
                          "leafId": "src.app.model.service.lsmLayouting.PADDING_BETWEEN_LEVELS",
                          "name": "PADDING_BETWEEN_LEVELS",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.model.service.lsmLayouting.PADDING_BETWEEN_LEVELS"
                          ],
                          "containedInternalDependencies": {}
                        },
                        {
                          "leafId": "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel",
                          "name": "calculateRequiredSpaceForLevel",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphNode.VisibleGraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.lsmLayouting.calculateRequiredSpace": {
                              "isCyclic": true,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.lsmLayouting.CytoscapeValues",
                          "name": "CytoscapeValues",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.model.service.lsmLayouting.CytoscapeValues"
                          ],
                          "containedInternalDependencies": {}
                        },
                        {
                          "leafId": "src.app.model.service.lsmLayouting.Coordinates",
                          "name": "Coordinates",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.model.service.lsmLayouting.Coordinates"
                          ],
                          "containedInternalDependencies": {}
                        },
                        {
                          "leafId": "src.app.model.service.lsmLayouting.SpaceRequirement",
                          "name": "SpaceRequirement",
                          "children": [],
                          "level": 1,
                          "containedLeaves": [
                            "src.app.model.service.lsmLayouting.SpaceRequirement"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.lsmLayouting.Coordinates": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.lsmLayouting.RelativePositionOfNode",
                          "name": "RelativePositionOfNode",
                          "children": [],
                          "level": 2,
                          "containedLeaves": [
                            "src.app.model.service.lsmLayouting.RelativePositionOfNode"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.lsmLayouting.SpaceRequirement": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.lsmLayouting.calculateRequiredSpace",
                          "name": "calculateRequiredSpace",
                          "children": [],
                          "level": 2,
                          "containedLeaves": [
                            "src.app.model.service.lsmLayouting.calculateRequiredSpace"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphNode.VisibleGraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.lsmLayouting.SpaceRequirement": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.lsmLayouting.CytoscapeValues": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel": {
                              "isCyclic": true,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.lsmLayouting.calculateSpaceRequirementsOfChildren",
                          "name": "calculateSpaceRequirementsOfChildren",
                          "children": [],
                          "level": 3,
                          "containedLeaves": [
                            "src.app.model.service.lsmLayouting.calculateSpaceRequirementsOfChildren"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphNode.VisibleGraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.lsmLayouting.RelativePositionOfNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.lsmLayouting.calculateRequiredSpace": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.lsmLayouting.layoutSubgraph",
                          "name": "layoutSubgraph",
                          "children": [],
                          "level": 4,
                          "containedLeaves": [
                            "src.app.model.service.lsmLayouting.layoutSubgraph"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphNode.VisibleGraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.lsmLayouting.RelativePositionOfNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.lsmLayouting.calculateSpaceRequirementsOfChildren": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.lsmLayouting.layout",
                          "name": "layout",
                          "children": [],
                          "level": 5,
                          "containedLeaves": [
                            "src.app.model.service.lsmLayouting.layout"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphNode.VisibleGraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.lsmLayouting.Coordinates": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.lsmLayouting.layoutSubgraph": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        }
                      ],
                      "level": 0,
                      "containedLeaves": [
                        "src.app.model.service.lsmLayouting.PADDING_BETWEEN_NODES",
                        "src.app.model.service.lsmLayouting.PADDING_BETWEEN_LEVELS",
                        "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel",
                        "src.app.model.service.lsmLayouting.CytoscapeValues",
                        "src.app.model.service.lsmLayouting.Coordinates",
                        "src.app.model.service.lsmLayouting.SpaceRequirement",
                        "src.app.model.service.lsmLayouting.RelativePositionOfNode",
                        "src.app.model.service.lsmLayouting.calculateRequiredSpace",
                        "src.app.model.service.lsmLayouting.calculateSpaceRequirementsOfChildren",
                        "src.app.model.service.lsmLayouting.layoutSubgraph",
                        "src.app.model.service.lsmLayouting.layout"
                      ],
                      "containedInternalDependencies": {
                        "src.app.model.GraphNode.VisibleGraphNode": {
                          "isCyclic": false,
                          "weight": 5
                        },
                        "src.app.model.service.lsmLayouting.calculateRequiredSpace": {
                          "isCyclic": true,
                          "weight": 2
                        },
                        "src.app.model.service.lsmLayouting.Coordinates": {
                          "isCyclic": false,
                          "weight": 2
                        },
                        "src.app.model.service.lsmLayouting.SpaceRequirement": {
                          "isCyclic": false,
                          "weight": 2
                        },
                        "src.app.model.service.lsmLayouting.CytoscapeValues": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel": {
                          "isCyclic": true,
                          "weight": 2
                        },
                        "src.app.model.service.lsmLayouting.RelativePositionOfNode": {
                          "isCyclic": false,
                          "weight": 2
                        },
                        "src.app.model.service.lsmLayouting.calculateSpaceRequirementsOfChildren": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.lsmLayouting.layoutSubgraph": {
                          "isCyclic": false,
                          "weight": 1
                        }
                      }
                    },
                    {
                      "name": "edgeFilter",
                      "children": [
                        {
                          "leafId": "src.app.model.service.edgeFilter.EdgeFilterType",
                          "name": "EdgeFilterType",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.model.service.edgeFilter.EdgeFilterType"
                          ],
                          "containedInternalDependencies": {}
                        },
                        {
                          "leafId": "src.app.model.service.edgeFilter.EdgeFilterResult",
                          "name": "EdgeFilterResult",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.model.service.edgeFilter.EdgeFilterResult"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphEdge.GraphEdge": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.edgeFilter.EdgeType",
                          "name": "EdgeType",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.model.service.edgeFilter.EdgeType"
                          ],
                          "containedInternalDependencies": {}
                        },
                        {
                          "leafId": "src.app.model.service.edgeFilter.EdgeFilter",
                          "name": "EdgeFilter",
                          "children": [],
                          "level": 1,
                          "containedLeaves": [
                            "src.app.model.service.edgeFilter.EdgeFilter"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphEdge.GraphEdge": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.edgeFilter.EdgeFilterResult": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.edgeFilter.edgeType",
                          "name": "edgeType",
                          "children": [],
                          "level": 1,
                          "containedLeaves": [
                            "src.app.model.service.edgeFilter.edgeType"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.edgeFilter.EdgeFilterResult": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.edgeFilter.EdgeType": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.edgeFilter.showNoEdges",
                          "name": "showNoEdges",
                          "children": [],
                          "level": 2,
                          "containedLeaves": [
                            "src.app.model.service.edgeFilter.showNoEdges"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.edgeFilter.EdgeFilter": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.GraphEdge.GraphEdge": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.edgeFilter.EdgeFilterResult": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.edgeFilter.showOnlyFeedbackEdges",
                          "name": "showOnlyFeedbackEdges",
                          "children": [],
                          "level": 2,
                          "containedLeaves": [
                            "src.app.model.service.edgeFilter.showOnlyFeedbackEdges"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.edgeFilter.EdgeFilter": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.GraphEdge.GraphEdge": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.feedbackEdge.isFeedbackEdge": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.edgeFilter.showFeedbackEdgesAndTwistedEdges",
                          "name": "showFeedbackEdgesAndTwistedEdges",
                          "children": [],
                          "level": 2,
                          "containedLeaves": [
                            "src.app.model.service.edgeFilter.showFeedbackEdgesAndTwistedEdges"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.edgeFilter.EdgeFilter": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.GraphEdge.GraphEdge": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.feedbackEdge.isFeedbackEdge": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.feedbackEdge.isTwistedEdge": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.edgeFilter.showOnlyCyclicEdges",
                          "name": "showOnlyCyclicEdges",
                          "children": [],
                          "level": 2,
                          "containedLeaves": [
                            "src.app.model.service.edgeFilter.showOnlyCyclicEdges"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.edgeFilter.EdgeFilter": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.GraphEdge.GraphEdge": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.feedbackEdge.isFeedbackEdge": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.edgeFilter.showAllEdges",
                          "name": "showAllEdges",
                          "children": [],
                          "level": 2,
                          "containedLeaves": [
                            "src.app.model.service.edgeFilter.showAllEdges"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.edgeFilter.EdgeFilter": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.GraphEdge.GraphEdge": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.feedbackEdge.isTwistedEdge": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.feedbackEdge.isFeedbackEdge": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        }
                      ],
                      "level": 1,
                      "containedLeaves": [
                        "src.app.model.service.edgeFilter.EdgeFilterType",
                        "src.app.model.service.edgeFilter.EdgeFilterResult",
                        "src.app.model.service.edgeFilter.EdgeType",
                        "src.app.model.service.edgeFilter.EdgeFilter",
                        "src.app.model.service.edgeFilter.edgeType",
                        "src.app.model.service.edgeFilter.showNoEdges",
                        "src.app.model.service.edgeFilter.showOnlyFeedbackEdges",
                        "src.app.model.service.edgeFilter.showFeedbackEdgesAndTwistedEdges",
                        "src.app.model.service.edgeFilter.showOnlyCyclicEdges",
                        "src.app.model.service.edgeFilter.showAllEdges"
                      ],
                      "containedInternalDependencies": {
                        "src.app.model.GraphEdge.GraphEdge": {
                          "isCyclic": false,
                          "weight": 7
                        },
                        "src.app.model.service.edgeFilter.EdgeFilterResult": {
                          "isCyclic": false,
                          "weight": 3
                        },
                        "src.app.model.service.edgeFilter.EdgeType": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.edgeFilter.EdgeFilter": {
                          "isCyclic": false,
                          "weight": 5
                        },
                        "src.app.model.service.feedbackEdge.isFeedbackEdge": {
                          "isCyclic": false,
                          "weight": 4
                        },
                        "src.app.model.service.feedbackEdge.isTwistedEdge": {
                          "isCyclic": false,
                          "weight": 2
                        }
                      }
                    },
                    {
                      "name": "stateHandler",
                      "children": [
                        {
                          "leafId": "src.app.model.service.stateHandler.isNodeOrAncestorIgnored",
                          "name": "isNodeOrAncestorIgnored",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.model.service.stateHandler.isNodeOrAncestorIgnored"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphNode.GraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.stateHandler.GraphStateActionType",
                          "name": "GraphStateActionType",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.model.service.stateHandler.GraphStateActionType"
                          ],
                          "containedInternalDependencies": {}
                        },
                        {
                          "leafId": "src.app.model.service.stateHandler.GraphState",
                          "name": "GraphState",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.model.service.stateHandler.GraphState"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphNode.GraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.edgeFilter.EdgeFilter": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.stateHandler.GraphStateAction",
                          "name": "GraphStateAction",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.model.service.stateHandler.GraphStateAction"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphNode.GraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.edgeFilter.EdgeFilter": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.stateHandler.toVisibleGraphNode",
                          "name": "toVisibleGraphNode",
                          "children": [],
                          "level": 1,
                          "containedLeaves": [
                            "src.app.model.service.stateHandler.toVisibleGraphNode"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphNode.GraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.GraphState": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.GraphNode.VisibleGraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.isNodeOrAncestorIgnored": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.stateHandler.buildGraphState",
                          "name": "buildGraphState",
                          "children": [],
                          "level": 1,
                          "containedLeaves": [
                            "src.app.model.service.stateHandler.buildGraphState"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphNode.GraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.GraphState": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.GraphNode.getNodeAndAllChildrenRecursively": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.edgeFilter.showOnlyFeedbackEdges": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.stateHandler.getVisibleNodes",
                          "name": "getVisibleNodes",
                          "children": [],
                          "level": 2,
                          "containedLeaves": [
                            "src.app.model.service.stateHandler.getVisibleNodes"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.stateHandler.GraphState": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.GraphNode.VisibleGraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.isNodeOrAncestorIgnored": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.toVisibleGraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.stateHandler.findGraphNode",
                          "name": "findGraphNode",
                          "children": [],
                          "level": 2,
                          "containedLeaves": [
                            "src.app.model.service.stateHandler.findGraphNode"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.stateHandler.GraphState": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.GraphNode.VisibleGraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.toVisibleGraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.model.service.stateHandler.graphStateReducer",
                          "name": "graphStateReducer",
                          "children": [],
                          "level": 3,
                          "containedLeaves": [
                            "src.app.model.service.stateHandler.graphStateReducer"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.stateHandler.GraphState": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.GraphStateAction": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.GraphStateActionType": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.buildGraphState": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.GraphNode.getNodeAndAllChildrenRecursively": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.findGraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        }
                      ],
                      "level": 2,
                      "containedLeaves": [
                        "src.app.model.service.stateHandler.isNodeOrAncestorIgnored",
                        "src.app.model.service.stateHandler.GraphStateActionType",
                        "src.app.model.service.stateHandler.GraphState",
                        "src.app.model.service.stateHandler.GraphStateAction",
                        "src.app.model.service.stateHandler.toVisibleGraphNode",
                        "src.app.model.service.stateHandler.buildGraphState",
                        "src.app.model.service.stateHandler.getVisibleNodes",
                        "src.app.model.service.stateHandler.findGraphNode",
                        "src.app.model.service.stateHandler.graphStateReducer"
                      ],
                      "containedInternalDependencies": {
                        "src.app.model.GraphNode.GraphNode": {
                          "isCyclic": false,
                          "weight": 5
                        },
                        "src.app.model.service.edgeFilter.EdgeFilter": {
                          "isCyclic": false,
                          "weight": 2
                        },
                        "src.app.model.service.stateHandler.GraphState": {
                          "isCyclic": false,
                          "weight": 5
                        },
                        "src.app.model.GraphNode.VisibleGraphNode": {
                          "isCyclic": false,
                          "weight": 3
                        },
                        "src.app.model.service.stateHandler.isNodeOrAncestorIgnored": {
                          "isCyclic": false,
                          "weight": 2
                        },
                        "src.app.model.GraphNode.getNodeAndAllChildrenRecursively": {
                          "isCyclic": false,
                          "weight": 2
                        },
                        "src.app.model.service.edgeFilter.showOnlyFeedbackEdges": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.stateHandler.toVisibleGraphNode": {
                          "isCyclic": false,
                          "weight": 2
                        },
                        "src.app.model.service.stateHandler.GraphStateAction": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.stateHandler.GraphStateActionType": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.stateHandler.buildGraphState": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.stateHandler.findGraphNode": {
                          "isCyclic": false,
                          "weight": 1
                        }
                      }
                    },
                    {
                      "name": "edge_service",
                      "children": [
                        {
                          "leafId": "src.app.model.service.edge_service.EdgeService",
                          "name": "EdgeService",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.model.service.edge_service.EdgeService"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphNode.VisibleGraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.GraphState": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.GraphEdge.GraphEdge": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.getVisibleNodes": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        }
                      ],
                      "level": 3,
                      "containedLeaves": [
                        "src.app.model.service.edge_service.EdgeService"
                      ],
                      "containedInternalDependencies": {
                        "src.app.model.GraphNode.VisibleGraphNode": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.stateHandler.GraphState": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.GraphEdge.GraphEdge": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.stateHandler.getVisibleNodes": {
                          "isCyclic": false,
                          "weight": 1
                        }
                      }
                    },
                    {
                      "name": "state_service",
                      "children": [
                        {
                          "leafId": "src.app.model.service.state_service.StateService",
                          "name": "StateService",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.model.service.state_service.StateService"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.stateHandler.GraphState": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.GraphStateAction": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.buildGraphState": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.graphStateReducer": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        }
                      ],
                      "level": 3,
                      "containedLeaves": [
                        "src.app.model.service.state_service.StateService"
                      ],
                      "containedInternalDependencies": {
                        "src.app.model.service.stateHandler.GraphState": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.stateHandler.GraphStateAction": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.stateHandler.buildGraphState": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.stateHandler.graphStateReducer": {
                          "isCyclic": false,
                          "weight": 1
                        }
                      }
                    }
                  ],
                  "level": 3,
                  "containedLeaves": [
                    "src.app.model.service.feedbackEdge.findGreatestCommonAncestor",
                    "src.app.model.service.feedbackEdge.isPointingUpwards",
                    "src.app.model.service.feedbackEdge.isTwistedEdge",
                    "src.app.model.service.feedbackEdge.isFeedbackEdge",
                    "src.app.model.service.lsmLayouting.PADDING_BETWEEN_NODES",
                    "src.app.model.service.lsmLayouting.PADDING_BETWEEN_LEVELS",
                    "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel",
                    "src.app.model.service.lsmLayouting.CytoscapeValues",
                    "src.app.model.service.lsmLayouting.Coordinates",
                    "src.app.model.service.lsmLayouting.SpaceRequirement",
                    "src.app.model.service.lsmLayouting.RelativePositionOfNode",
                    "src.app.model.service.lsmLayouting.calculateRequiredSpace",
                    "src.app.model.service.lsmLayouting.calculateSpaceRequirementsOfChildren",
                    "src.app.model.service.lsmLayouting.layoutSubgraph",
                    "src.app.model.service.lsmLayouting.layout",
                    "src.app.model.service.edgeFilter.EdgeFilterType",
                    "src.app.model.service.edgeFilter.EdgeFilterResult",
                    "src.app.model.service.edgeFilter.EdgeType",
                    "src.app.model.service.edgeFilter.EdgeFilter",
                    "src.app.model.service.edgeFilter.edgeType",
                    "src.app.model.service.edgeFilter.showNoEdges",
                    "src.app.model.service.edgeFilter.showOnlyFeedbackEdges",
                    "src.app.model.service.edgeFilter.showFeedbackEdgesAndTwistedEdges",
                    "src.app.model.service.edgeFilter.showOnlyCyclicEdges",
                    "src.app.model.service.edgeFilter.showAllEdges",
                    "src.app.model.service.stateHandler.isNodeOrAncestorIgnored",
                    "src.app.model.service.stateHandler.GraphStateActionType",
                    "src.app.model.service.stateHandler.GraphState",
                    "src.app.model.service.stateHandler.GraphStateAction",
                    "src.app.model.service.stateHandler.toVisibleGraphNode",
                    "src.app.model.service.stateHandler.buildGraphState",
                    "src.app.model.service.stateHandler.getVisibleNodes",
                    "src.app.model.service.stateHandler.findGraphNode",
                    "src.app.model.service.stateHandler.graphStateReducer",
                    "src.app.model.service.edge_service.EdgeService",
                    "src.app.model.service.state_service.StateService"
                  ],
                  "containedInternalDependencies": {
                    "src.app.model.GraphNode.GraphNode": {
                      "isCyclic": false,
                      "weight": 7
                    },
                    "src.app.model.GraphEdge.GraphEdge": {
                      "isCyclic": false,
                      "weight": 11
                    },
                    "src.app.model.service.feedbackEdge.findGreatestCommonAncestor": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.feedbackEdge.isPointingUpwards": {
                      "isCyclic": false,
                      "weight": 2
                    },
                    "src.app.model.GraphNode.VisibleGraphNode": {
                      "isCyclic": false,
                      "weight": 9
                    },
                    "src.app.model.service.lsmLayouting.calculateRequiredSpace": {
                      "isCyclic": true,
                      "weight": 2
                    },
                    "src.app.model.service.lsmLayouting.Coordinates": {
                      "isCyclic": false,
                      "weight": 2
                    },
                    "src.app.model.service.lsmLayouting.SpaceRequirement": {
                      "isCyclic": false,
                      "weight": 2
                    },
                    "src.app.model.service.lsmLayouting.CytoscapeValues": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel": {
                      "isCyclic": true,
                      "weight": 2
                    },
                    "src.app.model.service.lsmLayouting.RelativePositionOfNode": {
                      "isCyclic": false,
                      "weight": 2
                    },
                    "src.app.model.service.lsmLayouting.calculateSpaceRequirementsOfChildren": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.lsmLayouting.layoutSubgraph": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.edgeFilter.EdgeFilterResult": {
                      "isCyclic": false,
                      "weight": 3
                    },
                    "src.app.model.service.edgeFilter.EdgeType": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.edgeFilter.EdgeFilter": {
                      "isCyclic": false,
                      "weight": 7
                    },
                    "src.app.model.service.feedbackEdge.isFeedbackEdge": {
                      "isCyclic": false,
                      "weight": 4
                    },
                    "src.app.model.service.feedbackEdge.isTwistedEdge": {
                      "isCyclic": false,
                      "weight": 2
                    },
                    "src.app.model.service.stateHandler.GraphState": {
                      "isCyclic": false,
                      "weight": 7
                    },
                    "src.app.model.service.stateHandler.isNodeOrAncestorIgnored": {
                      "isCyclic": false,
                      "weight": 2
                    },
                    "src.app.model.GraphNode.getNodeAndAllChildrenRecursively": {
                      "isCyclic": false,
                      "weight": 2
                    },
                    "src.app.model.service.edgeFilter.showOnlyFeedbackEdges": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.stateHandler.toVisibleGraphNode": {
                      "isCyclic": false,
                      "weight": 2
                    },
                    "src.app.model.service.stateHandler.GraphStateAction": {
                      "isCyclic": false,
                      "weight": 2
                    },
                    "src.app.model.service.stateHandler.GraphStateActionType": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.stateHandler.buildGraphState": {
                      "isCyclic": false,
                      "weight": 2
                    },
                    "src.app.model.service.stateHandler.findGraphNode": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.stateHandler.getVisibleNodes": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.stateHandler.graphStateReducer": {
                      "isCyclic": false,
                      "weight": 1
                    }
                  }
                }
              ],
              "level": 0,
              "containedLeaves": [
                "src.app.model.ShallowGraphEdge.ShallowGraphEdge",
                "src.app.model.GraphNode.GraphNode",
                "src.app.model.GraphNode.VisibleGraphNode",
                "src.app.model.GraphNode.getNodeAndAllChildrenRecursively",
                "src.app.model.GraphNode.getSuccessorIds",
                "src.app.model.GraphNode.recursiveFind",
                "src.app.model.GraphEdge.GraphEdge",
                "src.app.model.service.feedbackEdge.findGreatestCommonAncestor",
                "src.app.model.service.feedbackEdge.isPointingUpwards",
                "src.app.model.service.feedbackEdge.isTwistedEdge",
                "src.app.model.service.feedbackEdge.isFeedbackEdge",
                "src.app.model.service.lsmLayouting.PADDING_BETWEEN_NODES",
                "src.app.model.service.lsmLayouting.PADDING_BETWEEN_LEVELS",
                "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel",
                "src.app.model.service.lsmLayouting.CytoscapeValues",
                "src.app.model.service.lsmLayouting.Coordinates",
                "src.app.model.service.lsmLayouting.SpaceRequirement",
                "src.app.model.service.lsmLayouting.RelativePositionOfNode",
                "src.app.model.service.lsmLayouting.calculateRequiredSpace",
                "src.app.model.service.lsmLayouting.calculateSpaceRequirementsOfChildren",
                "src.app.model.service.lsmLayouting.layoutSubgraph",
                "src.app.model.service.lsmLayouting.layout",
                "src.app.model.service.edgeFilter.EdgeFilterType",
                "src.app.model.service.edgeFilter.EdgeFilterResult",
                "src.app.model.service.edgeFilter.EdgeType",
                "src.app.model.service.edgeFilter.EdgeFilter",
                "src.app.model.service.edgeFilter.edgeType",
                "src.app.model.service.edgeFilter.showNoEdges",
                "src.app.model.service.edgeFilter.showOnlyFeedbackEdges",
                "src.app.model.service.edgeFilter.showFeedbackEdgesAndTwistedEdges",
                "src.app.model.service.edgeFilter.showOnlyCyclicEdges",
                "src.app.model.service.edgeFilter.showAllEdges",
                "src.app.model.service.stateHandler.isNodeOrAncestorIgnored",
                "src.app.model.service.stateHandler.GraphStateActionType",
                "src.app.model.service.stateHandler.GraphState",
                "src.app.model.service.stateHandler.GraphStateAction",
                "src.app.model.service.stateHandler.toVisibleGraphNode",
                "src.app.model.service.stateHandler.buildGraphState",
                "src.app.model.service.stateHandler.getVisibleNodes",
                "src.app.model.service.stateHandler.findGraphNode",
                "src.app.model.service.stateHandler.graphStateReducer",
                "src.app.model.service.edge_service.EdgeService",
                "src.app.model.service.state_service.StateService"
              ],
              "containedInternalDependencies": {
                "src.app.model.ShallowGraphEdge.ShallowGraphEdge": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.GraphNode.GraphNode": {
                  "isCyclic": false,
                  "weight": 10
                },
                "src.app.model.GraphNode.getNodeAndAllChildrenRecursively": {
                  "isCyclic": false,
                  "weight": 3
                },
                "src.app.model.GraphNode.VisibleGraphNode": {
                  "isCyclic": false,
                  "weight": 11
                },
                "src.app.model.GraphEdge.GraphEdge": {
                  "isCyclic": false,
                  "weight": 11
                },
                "src.app.model.service.feedbackEdge.findGreatestCommonAncestor": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.feedbackEdge.isPointingUpwards": {
                  "isCyclic": false,
                  "weight": 2
                },
                "src.app.model.service.lsmLayouting.calculateRequiredSpace": {
                  "isCyclic": true,
                  "weight": 2
                },
                "src.app.model.service.lsmLayouting.Coordinates": {
                  "isCyclic": false,
                  "weight": 2
                },
                "src.app.model.service.lsmLayouting.SpaceRequirement": {
                  "isCyclic": false,
                  "weight": 2
                },
                "src.app.model.service.lsmLayouting.CytoscapeValues": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel": {
                  "isCyclic": true,
                  "weight": 2
                },
                "src.app.model.service.lsmLayouting.RelativePositionOfNode": {
                  "isCyclic": false,
                  "weight": 2
                },
                "src.app.model.service.lsmLayouting.calculateSpaceRequirementsOfChildren": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.lsmLayouting.layoutSubgraph": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.edgeFilter.EdgeFilterResult": {
                  "isCyclic": false,
                  "weight": 3
                },
                "src.app.model.service.edgeFilter.EdgeType": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.edgeFilter.EdgeFilter": {
                  "isCyclic": false,
                  "weight": 7
                },
                "src.app.model.service.feedbackEdge.isFeedbackEdge": {
                  "isCyclic": false,
                  "weight": 4
                },
                "src.app.model.service.feedbackEdge.isTwistedEdge": {
                  "isCyclic": false,
                  "weight": 2
                },
                "src.app.model.service.stateHandler.GraphState": {
                  "isCyclic": false,
                  "weight": 7
                },
                "src.app.model.service.stateHandler.isNodeOrAncestorIgnored": {
                  "isCyclic": false,
                  "weight": 2
                },
                "src.app.model.service.edgeFilter.showOnlyFeedbackEdges": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.stateHandler.toVisibleGraphNode": {
                  "isCyclic": false,
                  "weight": 2
                },
                "src.app.model.service.stateHandler.GraphStateAction": {
                  "isCyclic": false,
                  "weight": 2
                },
                "src.app.model.service.stateHandler.GraphStateActionType": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.stateHandler.buildGraphState": {
                  "isCyclic": false,
                  "weight": 2
                },
                "src.app.model.service.stateHandler.findGraphNode": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.stateHandler.getVisibleNodes": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.stateHandler.graphStateReducer": {
                  "isCyclic": false,
                  "weight": 1
                }
              }
            },
            {
              "name": "adapter",
              "children": [
                {
                  "name": "analysis",
                  "children": [
                    {
                      "name": "internal",
                      "children": [
                        {
                          "name": "ProjectReport",
                          "children": [
                            {
                              "leafId": "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation",
                              "name": "EdgeMetaInformation",
                              "children": [],
                              "level": 0,
                              "containedLeaves": [
                                "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation"
                              ],
                              "containedInternalDependencies": {}
                            },
                            {
                              "leafId": "src.app.adapter.analysis.internal.ProjectReport.Language",
                              "name": "Language",
                              "children": [],
                              "level": 0,
                              "containedLeaves": [
                                "src.app.adapter.analysis.internal.ProjectReport.Language"
                              ],
                              "containedInternalDependencies": {}
                            },
                            {
                              "leafId": "src.app.adapter.analysis.internal.ProjectReport.NodeType",
                              "name": "NodeType",
                              "children": [],
                              "level": 0,
                              "containedLeaves": [
                                "src.app.adapter.analysis.internal.ProjectReport.NodeType"
                              ],
                              "containedInternalDependencies": {}
                            },
                            {
                              "leafId": "src.app.adapter.analysis.internal.ProjectReport.ProjectNode",
                              "name": "ProjectNode",
                              "children": [],
                              "level": 1,
                              "containedLeaves": [
                                "src.app.adapter.analysis.internal.ProjectReport.ProjectNode"
                              ],
                              "containedInternalDependencies": {
                                "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation": {
                                  "isCyclic": false,
                                  "weight": 1
                                }
                              }
                            },
                            {
                              "leafId": "src.app.adapter.analysis.internal.ProjectReport.NodeInformation",
                              "name": "NodeInformation",
                              "children": [],
                              "level": 1,
                              "containedLeaves": [
                                "src.app.adapter.analysis.internal.ProjectReport.NodeInformation"
                              ],
                              "containedInternalDependencies": {
                                "src.app.adapter.analysis.internal.ProjectReport.Language": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.analysis.internal.ProjectReport.NodeType": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation": {
                                  "isCyclic": false,
                                  "weight": 1
                                }
                              }
                            },
                            {
                              "leafId": "src.app.adapter.analysis.internal.ProjectReport.ProjectReport",
                              "name": "ProjectReport",
                              "children": [],
                              "level": 2,
                              "containedLeaves": [
                                "src.app.adapter.analysis.internal.ProjectReport.ProjectReport"
                              ],
                              "containedInternalDependencies": {
                                "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.analysis.internal.ProjectReport.NodeInformation": {
                                  "isCyclic": false,
                                  "weight": 1
                                }
                              }
                            },
                            {
                              "leafId": "src.app.adapter.analysis.internal.ProjectReport.getNodeId",
                              "name": "getNodeId",
                              "children": [],
                              "level": 2,
                              "containedLeaves": [
                                "src.app.adapter.analysis.internal.ProjectReport.getNodeId"
                              ],
                              "containedInternalDependencies": {
                                "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
                                  "isCyclic": false,
                                  "weight": 1
                                }
                              }
                            },
                            {
                              "leafId": "src.app.adapter.analysis.internal.ProjectReport.getChildren",
                              "name": "getChildren",
                              "children": [],
                              "level": 3,
                              "containedLeaves": [
                                "src.app.adapter.analysis.internal.ProjectReport.getChildren"
                              ],
                              "containedInternalDependencies": {
                                "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.analysis.internal.ProjectReport.getNodeId": {
                                  "isCyclic": false,
                                  "weight": 1
                                }
                              }
                            }
                          ],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation",
                            "src.app.adapter.analysis.internal.ProjectReport.Language",
                            "src.app.adapter.analysis.internal.ProjectReport.NodeType",
                            "src.app.adapter.analysis.internal.ProjectReport.ProjectNode",
                            "src.app.adapter.analysis.internal.ProjectReport.NodeInformation",
                            "src.app.adapter.analysis.internal.ProjectReport.ProjectReport",
                            "src.app.adapter.analysis.internal.ProjectReport.getNodeId",
                            "src.app.adapter.analysis.internal.ProjectReport.getChildren"
                          ],
                          "containedInternalDependencies": {
                            "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation": {
                              "isCyclic": false,
                              "weight": 2
                            },
                            "src.app.adapter.analysis.internal.ProjectReport.Language": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.analysis.internal.ProjectReport.NodeType": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
                              "isCyclic": false,
                              "weight": 3
                            },
                            "src.app.adapter.analysis.internal.ProjectReport.NodeInformation": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.analysis.internal.ProjectReport.getNodeId": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        }
                      ],
                      "level": 0,
                      "containedLeaves": [
                        "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation",
                        "src.app.adapter.analysis.internal.ProjectReport.Language",
                        "src.app.adapter.analysis.internal.ProjectReport.NodeType",
                        "src.app.adapter.analysis.internal.ProjectReport.ProjectNode",
                        "src.app.adapter.analysis.internal.ProjectReport.NodeInformation",
                        "src.app.adapter.analysis.internal.ProjectReport.ProjectReport",
                        "src.app.adapter.analysis.internal.ProjectReport.getNodeId",
                        "src.app.adapter.analysis.internal.ProjectReport.getChildren"
                      ],
                      "containedInternalDependencies": {
                        "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation": {
                          "isCyclic": false,
                          "weight": 2
                        },
                        "src.app.adapter.analysis.internal.ProjectReport.Language": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.analysis.internal.ProjectReport.NodeType": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
                          "isCyclic": false,
                          "weight": 3
                        },
                        "src.app.adapter.analysis.internal.ProjectReport.NodeInformation": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.analysis.internal.ProjectReport.getNodeId": {
                          "isCyclic": false,
                          "weight": 1
                        }
                      }
                    },
                    {
                      "name": "ProjectNodeConverter",
                      "children": [
                        {
                          "leafId": "src.app.adapter.analysis.ProjectNodeConverter.toShallowGraphEdge",
                          "name": "toShallowGraphEdge",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.adapter.analysis.ProjectNodeConverter.toShallowGraphEdge"
                          ],
                          "containedInternalDependencies": {
                            "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.ShallowGraphEdge.ShallowGraphEdge": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges",
                          "name": "convertToGraphNodesWithLightEdges",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges"
                          ],
                          "containedInternalDependencies": {
                            "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.GraphNode.GraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodeWithoutEdge": {
                              "isCyclic": true,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodeWithoutEdge",
                          "name": "convertToGraphNodeWithoutEdge",
                          "children": [],
                          "level": 1,
                          "containedLeaves": [
                            "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodeWithoutEdge"
                          ],
                          "containedInternalDependencies": {
                            "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.GraphNode.GraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.analysis.internal.ProjectReport.getNodeId": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.analysis.ProjectNodeConverter.toShallowGraphEdge": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges": {
                              "isCyclic": true,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "leafId": "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodes",
                          "name": "convertToGraphNodes",
                          "children": [],
                          "level": 1,
                          "containedLeaves": [
                            "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodes"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphNode.GraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        }
                      ],
                      "level": 1,
                      "containedLeaves": [
                        "src.app.adapter.analysis.ProjectNodeConverter.toShallowGraphEdge",
                        "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges",
                        "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodeWithoutEdge",
                        "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodes"
                      ],
                      "containedInternalDependencies": {
                        "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.ShallowGraphEdge.ShallowGraphEdge": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
                          "isCyclic": false,
                          "weight": 2
                        },
                        "src.app.model.GraphNode.GraphNode": {
                          "isCyclic": false,
                          "weight": 3
                        },
                        "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodeWithoutEdge": {
                          "isCyclic": true,
                          "weight": 1
                        },
                        "src.app.adapter.analysis.internal.ProjectReport.getNodeId": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.analysis.ProjectNodeConverter.toShallowGraphEdge": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges": {
                          "isCyclic": true,
                          "weight": 2
                        }
                      }
                    },
                    {
                      "name": "index",
                      "children": [
                        {
                          "leafId": "src.app.adapter.analysis.index.convertToGraphNodes",
                          "name": "convertToGraphNodes",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.adapter.analysis.index.convertToGraphNodes"
                          ],
                          "containedInternalDependencies": {
                            "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodes": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        }
                      ],
                      "level": 2,
                      "containedLeaves": [
                        "src.app.adapter.analysis.index.convertToGraphNodes"
                      ],
                      "containedInternalDependencies": {
                        "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodes": {
                          "isCyclic": false,
                          "weight": 1
                        }
                      }
                    }
                  ],
                  "level": 0,
                  "containedLeaves": [
                    "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation",
                    "src.app.adapter.analysis.internal.ProjectReport.Language",
                    "src.app.adapter.analysis.internal.ProjectReport.NodeType",
                    "src.app.adapter.analysis.internal.ProjectReport.ProjectNode",
                    "src.app.adapter.analysis.internal.ProjectReport.NodeInformation",
                    "src.app.adapter.analysis.internal.ProjectReport.ProjectReport",
                    "src.app.adapter.analysis.internal.ProjectReport.getNodeId",
                    "src.app.adapter.analysis.internal.ProjectReport.getChildren",
                    "src.app.adapter.analysis.ProjectNodeConverter.toShallowGraphEdge",
                    "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges",
                    "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodeWithoutEdge",
                    "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodes",
                    "src.app.adapter.analysis.index.convertToGraphNodes"
                  ],
                  "containedInternalDependencies": {
                    "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation": {
                      "isCyclic": false,
                      "weight": 3
                    },
                    "src.app.adapter.analysis.internal.ProjectReport.Language": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.analysis.internal.ProjectReport.NodeType": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
                      "isCyclic": false,
                      "weight": 5
                    },
                    "src.app.adapter.analysis.internal.ProjectReport.NodeInformation": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.analysis.internal.ProjectReport.getNodeId": {
                      "isCyclic": false,
                      "weight": 2
                    },
                    "src.app.model.ShallowGraphEdge.ShallowGraphEdge": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.GraphNode.GraphNode": {
                      "isCyclic": false,
                      "weight": 3
                    },
                    "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodeWithoutEdge": {
                      "isCyclic": true,
                      "weight": 1
                    },
                    "src.app.adapter.analysis.ProjectNodeConverter.toShallowGraphEdge": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges": {
                      "isCyclic": true,
                      "weight": 2
                    },
                    "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodes": {
                      "isCyclic": false,
                      "weight": 1
                    }
                  }
                },
                {
                  "name": "cytoscape",
                  "children": [
                    {
                      "name": "internal",
                      "children": [
                        {
                          "name": "converter",
                          "children": [
                            {
                              "name": "coordinateConverter",
                              "children": [
                                {
                                  "leafId": "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph",
                                  "name": "flattenGraph",
                                  "children": [],
                                  "level": 0,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph"
                                  ],
                                  "containedInternalDependencies": {
                                    "src.app.model.GraphNode.VisibleGraphNode": {
                                      "isCyclic": false,
                                      "weight": 1
                                    }
                                  }
                                },
                                {
                                  "leafId": "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates",
                                  "name": "calculateAbsoluteCoordinates",
                                  "children": [],
                                  "level": 0,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates"
                                  ],
                                  "containedInternalDependencies": {
                                    "src.app.model.GraphNode.GraphNode": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.model.service.lsmLayouting.Coordinates": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.model.service.lsmLayouting.CytoscapeValues": {
                                      "isCyclic": false,
                                      "weight": 1
                                    }
                                  }
                                },
                                {
                                  "leafId": "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates",
                                  "name": "toAbsoluteCoordinates",
                                  "children": [],
                                  "level": 1,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates"
                                  ],
                                  "containedInternalDependencies": {
                                    "src.app.model.service.lsmLayouting.Coordinates": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.model.GraphNode.VisibleGraphNode": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates": {
                                      "isCyclic": false,
                                      "weight": 1
                                    }
                                  }
                                }
                              ],
                              "level": 0,
                              "containedLeaves": [
                                "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph",
                                "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates",
                                "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates"
                              ],
                              "containedInternalDependencies": {
                                "src.app.model.GraphNode.VisibleGraphNode": {
                                  "isCyclic": false,
                                  "weight": 2
                                },
                                "src.app.model.GraphNode.GraphNode": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.model.service.lsmLayouting.Coordinates": {
                                  "isCyclic": false,
                                  "weight": 2
                                },
                                "src.app.model.service.lsmLayouting.CytoscapeValues": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates": {
                                  "isCyclic": false,
                                  "weight": 1
                                }
                              }
                            },
                            {
                              "name": "elementDefinitionConverter",
                              "children": [
                                {
                                  "leafId": "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode",
                                  "name": "toCytoscapeNode",
                                  "children": [],
                                  "level": 0,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode"
                                  ],
                                  "containedInternalDependencies": {
                                    "src.app.model.GraphNode.VisibleGraphNode": {
                                      "isCyclic": false,
                                      "weight": 1
                                    }
                                  }
                                },
                                {
                                  "leafId": "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge",
                                  "name": "toCytoscapeEdge",
                                  "children": [],
                                  "level": 0,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge"
                                  ],
                                  "containedInternalDependencies": {
                                    "src.app.model.GraphEdge.GraphEdge": {
                                      "isCyclic": false,
                                      "weight": 1
                                    }
                                  }
                                },
                                {
                                  "leafId": "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes",
                                  "name": "toVisibleGraphNodes",
                                  "children": [],
                                  "level": 0,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes"
                                  ],
                                  "containedInternalDependencies": {
                                    "src.app.model.GraphNode.VisibleGraphNode": {
                                      "isCyclic": false,
                                      "weight": 1
                                    }
                                  }
                                },
                                {
                                  "leafId": "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges",
                                  "name": "toGraphEdges",
                                  "children": [],
                                  "level": 0,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges"
                                  ],
                                  "containedInternalDependencies": {
                                    "src.app.model.GraphNode.VisibleGraphNode": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.model.GraphEdge.GraphEdge": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.model.GraphNode.recursiveFind": {
                                      "isCyclic": false,
                                      "weight": 1
                                    }
                                  }
                                },
                                {
                                  "leafId": "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes",
                                  "name": "toCytoscapeNodes",
                                  "children": [],
                                  "level": 1,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes"
                                  ],
                                  "containedInternalDependencies": {
                                    "src.app.model.GraphNode.VisibleGraphNode": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode": {
                                      "isCyclic": false,
                                      "weight": 1
                                    }
                                  }
                                },
                                {
                                  "leafId": "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges",
                                  "name": "toCytoscapeEdges",
                                  "children": [],
                                  "level": 1,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges"
                                  ],
                                  "containedInternalDependencies": {
                                    "src.app.model.GraphEdge.GraphEdge": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge": {
                                      "isCyclic": false,
                                      "weight": 1
                                    }
                                  }
                                }
                              ],
                              "level": 0,
                              "containedLeaves": [
                                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode",
                                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge",
                                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes",
                                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges",
                                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes",
                                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges"
                              ],
                              "containedInternalDependencies": {
                                "src.app.model.GraphNode.VisibleGraphNode": {
                                  "isCyclic": false,
                                  "weight": 4
                                },
                                "src.app.model.GraphEdge.GraphEdge": {
                                  "isCyclic": false,
                                  "weight": 3
                                },
                                "src.app.model.GraphNode.recursiveFind": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge": {
                                  "isCyclic": false,
                                  "weight": 1
                                }
                              }
                            }
                          ],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph",
                            "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates",
                            "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates",
                            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode",
                            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge",
                            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes",
                            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges",
                            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes",
                            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.GraphNode.VisibleGraphNode": {
                              "isCyclic": false,
                              "weight": 6
                            },
                            "src.app.model.GraphNode.GraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.lsmLayouting.Coordinates": {
                              "isCyclic": false,
                              "weight": 2
                            },
                            "src.app.model.service.lsmLayouting.CytoscapeValues": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.GraphEdge.GraphEdge": {
                              "isCyclic": false,
                              "weight": 3
                            },
                            "src.app.model.GraphNode.recursiveFind": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "name": "cytoscapeConfig",
                          "children": [
                            {
                              "leafId": "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options",
                              "name": "cytoscape_options",
                              "children": [],
                              "level": 0,
                              "containedLeaves": [
                                "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options"
                              ],
                              "containedInternalDependencies": {}
                            },
                            {
                              "leafId": "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style",
                              "name": "cytoscape_style",
                              "children": [],
                              "level": 0,
                              "containedLeaves": [
                                "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style"
                              ],
                              "containedInternalDependencies": {}
                            }
                          ],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options",
                            "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style"
                          ],
                          "containedInternalDependencies": {}
                        },
                        {
                          "name": "highlight_service",
                          "children": [
                            {
                              "leafId": "src.app.adapter.cytoscape.internal.highlight_service.HighlightService",
                              "name": "HighlightService",
                              "children": [],
                              "level": 0,
                              "containedLeaves": [
                                "src.app.adapter.cytoscape.internal.highlight_service.HighlightService"
                              ],
                              "containedInternalDependencies": {}
                            }
                          ],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.adapter.cytoscape.internal.highlight_service.HighlightService"
                          ],
                          "containedInternalDependencies": {}
                        },
                        {
                          "name": "nodeUtils",
                          "children": [
                            {
                              "leafId": "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf",
                              "name": "getSubtreeOf",
                              "children": [],
                              "level": 0,
                              "containedLeaves": [
                                "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf"
                              ],
                              "containedInternalDependencies": {}
                            },
                            {
                              "leafId": "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors",
                              "name": "getAncestors",
                              "children": [],
                              "level": 0,
                              "containedLeaves": [
                                "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors"
                              ],
                              "containedInternalDependencies": {}
                            }
                          ],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf",
                            "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors"
                          ],
                          "containedInternalDependencies": {}
                        },
                        {
                          "name": "CyLsmLayout",
                          "children": [
                            {
                              "leafId": "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout",
                              "name": "CyLsmLayout",
                              "children": [],
                              "level": 0,
                              "containedLeaves": [
                                "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout"
                              ],
                              "containedInternalDependencies": {
                                "src.app.model.service.lsmLayouting.Coordinates": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.model.GraphNode.VisibleGraphNode": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.model.service.lsmLayouting.layout": {
                                  "isCyclic": false,
                                  "weight": 1
                                }
                              }
                            },
                            {
                              "leafId": "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout",
                              "name": "lsmLayout",
                              "children": [],
                              "level": 1,
                              "containedLeaves": [
                                "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout"
                              ],
                              "containedInternalDependencies": {
                                "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout": {
                                  "isCyclic": false,
                                  "weight": 1
                                }
                              }
                            }
                          ],
                          "level": 1,
                          "containedLeaves": [
                            "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout",
                            "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.lsmLayouting.Coordinates": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.GraphNode.VisibleGraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.lsmLayouting.layout": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "name": "cytoscape_service",
                          "children": [
                            {
                              "leafId": "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService",
                              "name": "CytoscapeService",
                              "children": [],
                              "level": 0,
                              "containedLeaves": [
                                "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService"
                              ],
                              "containedInternalDependencies": {
                                "src.app.model.service.stateHandler.GraphStateAction": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.highlight_service.HighlightService": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout": {
                                  "isCyclic": false,
                                  "weight": 1
                                }
                              }
                            }
                          ],
                          "level": 2,
                          "containedLeaves": [
                            "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.stateHandler.GraphStateAction": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.highlight_service.HighlightService": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "name": "state",
                          "children": [
                            {
                              "name": "cytoscape-state_service",
                              "children": [
                                {
                                  "leafId": "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService",
                                  "name": "CytoscapeStateService",
                                  "children": [],
                                  "level": 0,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService"
                                  ],
                                  "containedInternalDependencies": {
                                    "src.app.model.service.stateHandler.GraphStateAction": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.model.service.stateHandler.GraphState": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.model.service.stateHandler.GraphStateActionType": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.model.service.stateHandler.getVisibleNodes": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.model.service.stateHandler.findGraphNode": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.model.service.edge_service.EdgeService": {
                                      "isCyclic": false,
                                      "weight": 1
                                    }
                                  }
                                }
                              ],
                              "level": 0,
                              "containedLeaves": [
                                "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService"
                              ],
                              "containedInternalDependencies": {
                                "src.app.model.service.stateHandler.GraphStateAction": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.model.service.stateHandler.GraphState": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.model.service.stateHandler.GraphStateActionType": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.model.service.stateHandler.getVisibleNodes": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.model.service.stateHandler.findGraphNode": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.model.service.edge_service.EdgeService": {
                                  "isCyclic": false,
                                  "weight": 1
                                }
                              }
                            }
                          ],
                          "level": 3,
                          "containedLeaves": [
                            "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.stateHandler.GraphStateAction": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.GraphState": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.GraphStateActionType": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.getVisibleNodes": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.findGraphNode": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.edge_service.EdgeService": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        },
                        {
                          "name": "ui",
                          "children": [
                            {
                              "name": "edge-display_service",
                              "children": [
                                {
                                  "leafId": "src.app.adapter.cytoscape.internal.ui.edge-display_service.REGULAR_EDGE_COLOR",
                                  "name": "REGULAR_EDGE_COLOR",
                                  "children": [],
                                  "level": 0,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.ui.edge-display_service.REGULAR_EDGE_COLOR"
                                  ],
                                  "containedInternalDependencies": {}
                                },
                                {
                                  "leafId": "src.app.adapter.cytoscape.internal.ui.edge-display_service.CYCLE_EDGE_COLOR",
                                  "name": "CYCLE_EDGE_COLOR",
                                  "children": [],
                                  "level": 0,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.ui.edge-display_service.CYCLE_EDGE_COLOR"
                                  ],
                                  "containedInternalDependencies": {}
                                },
                                {
                                  "leafId": "src.app.adapter.cytoscape.internal.ui.edge-display_service.FEEDBACK_EDGE_COLOR",
                                  "name": "FEEDBACK_EDGE_COLOR",
                                  "children": [],
                                  "level": 0,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.ui.edge-display_service.FEEDBACK_EDGE_COLOR"
                                  ],
                                  "containedInternalDependencies": {}
                                },
                                {
                                  "leafId": "src.app.adapter.cytoscape.internal.ui.edge-display_service.TWISTED_EDGE_COLOR",
                                  "name": "TWISTED_EDGE_COLOR",
                                  "children": [],
                                  "level": 0,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.ui.edge-display_service.TWISTED_EDGE_COLOR"
                                  ],
                                  "containedInternalDependencies": {}
                                },
                                {
                                  "leafId": "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService",
                                  "name": "EdgeDisplayService",
                                  "children": [],
                                  "level": 0,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService"
                                  ],
                                  "containedInternalDependencies": {
                                    "src.app.model.service.edgeFilter.EdgeFilter": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.model.service.edgeFilter.edgeType": {
                                      "isCyclic": false,
                                      "weight": 1
                                    }
                                  }
                                }
                              ],
                              "level": 0,
                              "containedLeaves": [
                                "src.app.adapter.cytoscape.internal.ui.edge-display_service.REGULAR_EDGE_COLOR",
                                "src.app.adapter.cytoscape.internal.ui.edge-display_service.CYCLE_EDGE_COLOR",
                                "src.app.adapter.cytoscape.internal.ui.edge-display_service.FEEDBACK_EDGE_COLOR",
                                "src.app.adapter.cytoscape.internal.ui.edge-display_service.TWISTED_EDGE_COLOR",
                                "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService"
                              ],
                              "containedInternalDependencies": {
                                "src.app.model.service.edgeFilter.EdgeFilter": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.model.service.edgeFilter.edgeType": {
                                  "isCyclic": false,
                                  "weight": 1
                                }
                              }
                            },
                            {
                              "name": "non-compound-nodes",
                              "children": [
                                {
                                  "name": "interaction-bar",
                                  "children": [
                                    {
                                      "name": "interaction-bar_component",
                                      "children": [
                                        {
                                          "leafId": "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent",
                                          "name": "InteractionBarComponent",
                                          "children": [],
                                          "level": 0,
                                          "containedLeaves": [
                                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent"
                                          ],
                                          "containedInternalDependencies": {}
                                        }
                                      ],
                                      "level": 0,
                                      "containedLeaves": [
                                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent"
                                      ],
                                      "containedInternalDependencies": {}
                                    }
                                  ],
                                  "level": 0,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent"
                                  ],
                                  "containedInternalDependencies": {}
                                },
                                {
                                  "name": "non-compound-node",
                                  "children": [
                                    {
                                      "name": "non-compound-node_component",
                                      "children": [
                                        {
                                          "leafId": "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent",
                                          "name": "NonCompoundNodeComponent",
                                          "children": [],
                                          "level": 0,
                                          "containedLeaves": [
                                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent"
                                          ],
                                          "containedInternalDependencies": {
                                            "src.app.model.GraphNode.VisibleGraphNode": {
                                              "isCyclic": false,
                                              "weight": 1
                                            },
                                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                                              "isCyclic": false,
                                              "weight": 1
                                            },
                                            "src.app.model.service.edgeFilter.EdgeFilter": {
                                              "isCyclic": false,
                                              "weight": 1
                                            },
                                            "src.app.model.GraphEdge.GraphEdge": {
                                              "isCyclic": false,
                                              "weight": 1
                                            },
                                            "src.app.model.service.stateHandler.GraphStateActionType": {
                                              "isCyclic": false,
                                              "weight": 1
                                            },
                                            "src.app.model.service.feedbackEdge.isTwistedEdge": {
                                              "isCyclic": false,
                                              "weight": 1
                                            },
                                            "src.app.model.service.feedbackEdge.isFeedbackEdge": {
                                              "isCyclic": false,
                                              "weight": 1
                                            },
                                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent": {
                                              "isCyclic": false,
                                              "weight": 1
                                            },
                                            "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
                                              "isCyclic": false,
                                              "weight": 1
                                            }
                                          }
                                        }
                                      ],
                                      "level": 0,
                                      "containedLeaves": [
                                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent"
                                      ],
                                      "containedInternalDependencies": {
                                        "src.app.model.GraphNode.VisibleGraphNode": {
                                          "isCyclic": false,
                                          "weight": 1
                                        },
                                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                                          "isCyclic": false,
                                          "weight": 1
                                        },
                                        "src.app.model.service.edgeFilter.EdgeFilter": {
                                          "isCyclic": false,
                                          "weight": 1
                                        },
                                        "src.app.model.GraphEdge.GraphEdge": {
                                          "isCyclic": false,
                                          "weight": 1
                                        },
                                        "src.app.model.service.stateHandler.GraphStateActionType": {
                                          "isCyclic": false,
                                          "weight": 1
                                        },
                                        "src.app.model.service.feedbackEdge.isTwistedEdge": {
                                          "isCyclic": false,
                                          "weight": 1
                                        },
                                        "src.app.model.service.feedbackEdge.isFeedbackEdge": {
                                          "isCyclic": false,
                                          "weight": 1
                                        },
                                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent": {
                                          "isCyclic": false,
                                          "weight": 1
                                        },
                                        "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
                                          "isCyclic": false,
                                          "weight": 1
                                        }
                                      }
                                    }
                                  ],
                                  "level": 1,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent"
                                  ],
                                  "containedInternalDependencies": {
                                    "src.app.model.GraphNode.VisibleGraphNode": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.model.service.edgeFilter.EdgeFilter": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.model.GraphEdge.GraphEdge": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.model.service.stateHandler.GraphStateActionType": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.model.service.feedbackEdge.isTwistedEdge": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.model.service.feedbackEdge.isFeedbackEdge": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
                                      "isCyclic": false,
                                      "weight": 1
                                    }
                                  }
                                },
                                {
                                  "name": "other-node-container",
                                  "children": [
                                    {
                                      "name": "other-node-container_component",
                                      "children": [
                                        {
                                          "leafId": "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation",
                                          "name": "RenderInformation",
                                          "children": [],
                                          "level": 0,
                                          "containedLeaves": [
                                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation"
                                          ],
                                          "containedInternalDependencies": {}
                                        },
                                        {
                                          "leafId": "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent",
                                          "name": "OtherNodeContainerComponent",
                                          "children": [],
                                          "level": 1,
                                          "containedLeaves": [
                                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent"
                                          ],
                                          "containedInternalDependencies": {
                                            "src.app.model.GraphNode.VisibleGraphNode": {
                                              "isCyclic": false,
                                              "weight": 1
                                            },
                                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                                              "isCyclic": false,
                                              "weight": 1
                                            },
                                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent": {
                                              "isCyclic": false,
                                              "weight": 1
                                            }
                                          }
                                        }
                                      ],
                                      "level": 0,
                                      "containedLeaves": [
                                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation",
                                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent"
                                      ],
                                      "containedInternalDependencies": {
                                        "src.app.model.GraphNode.VisibleGraphNode": {
                                          "isCyclic": false,
                                          "weight": 1
                                        },
                                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                                          "isCyclic": false,
                                          "weight": 1
                                        },
                                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent": {
                                          "isCyclic": false,
                                          "weight": 1
                                        }
                                      }
                                    }
                                  ],
                                  "level": 2,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation",
                                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent"
                                  ],
                                  "containedInternalDependencies": {
                                    "src.app.model.GraphNode.VisibleGraphNode": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent": {
                                      "isCyclic": false,
                                      "weight": 1
                                    }
                                  }
                                }
                              ],
                              "level": 0,
                              "containedLeaves": [
                                "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent",
                                "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent",
                                "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation",
                                "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent"
                              ],
                              "containedInternalDependencies": {
                                "src.app.model.GraphNode.VisibleGraphNode": {
                                  "isCyclic": false,
                                  "weight": 2
                                },
                                "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                                  "isCyclic": false,
                                  "weight": 2
                                },
                                "src.app.model.service.edgeFilter.EdgeFilter": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.model.GraphEdge.GraphEdge": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.model.service.stateHandler.GraphStateActionType": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.model.service.feedbackEdge.isTwistedEdge": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.model.service.feedbackEdge.isFeedbackEdge": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent": {
                                  "isCyclic": false,
                                  "weight": 1
                                }
                              }
                            },
                            {
                              "name": "compound-nodes",
                              "children": [
                                {
                                  "name": "menu",
                                  "children": [
                                    {
                                      "name": "compound-node-menu_component",
                                      "children": [
                                        {
                                          "leafId": "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent",
                                          "name": "CompoundNodeMenuComponent",
                                          "children": [],
                                          "level": 0,
                                          "containedLeaves": [
                                            "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent"
                                          ],
                                          "containedInternalDependencies": {
                                            "src.app.model.GraphNode.VisibleGraphNode": {
                                              "isCyclic": false,
                                              "weight": 1
                                            }
                                          }
                                        }
                                      ],
                                      "level": 0,
                                      "containedLeaves": [
                                        "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent"
                                      ],
                                      "containedInternalDependencies": {
                                        "src.app.model.GraphNode.VisibleGraphNode": {
                                          "isCyclic": false,
                                          "weight": 1
                                        }
                                      }
                                    }
                                  ],
                                  "level": 0,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent"
                                  ],
                                  "containedInternalDependencies": {
                                    "src.app.model.GraphNode.VisibleGraphNode": {
                                      "isCyclic": false,
                                      "weight": 1
                                    }
                                  }
                                },
                                {
                                  "name": "compound-node",
                                  "children": [
                                    {
                                      "name": "compound-node_component",
                                      "children": [
                                        {
                                          "leafId": "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent",
                                          "name": "CompoundNodeComponent",
                                          "children": [],
                                          "level": 0,
                                          "containedLeaves": [
                                            "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent"
                                          ],
                                          "containedInternalDependencies": {
                                            "src.app.model.GraphNode.VisibleGraphNode": {
                                              "isCyclic": false,
                                              "weight": 1
                                            },
                                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                                              "isCyclic": false,
                                              "weight": 1
                                            },
                                            "src.app.model.service.stateHandler.GraphStateActionType": {
                                              "isCyclic": false,
                                              "weight": 1
                                            },
                                            "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent": {
                                              "isCyclic": false,
                                              "weight": 1
                                            },
                                            "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
                                              "isCyclic": false,
                                              "weight": 1
                                            }
                                          }
                                        }
                                      ],
                                      "level": 0,
                                      "containedLeaves": [
                                        "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent"
                                      ],
                                      "containedInternalDependencies": {
                                        "src.app.model.GraphNode.VisibleGraphNode": {
                                          "isCyclic": false,
                                          "weight": 1
                                        },
                                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                                          "isCyclic": false,
                                          "weight": 1
                                        },
                                        "src.app.model.service.stateHandler.GraphStateActionType": {
                                          "isCyclic": false,
                                          "weight": 1
                                        },
                                        "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent": {
                                          "isCyclic": false,
                                          "weight": 1
                                        },
                                        "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
                                          "isCyclic": false,
                                          "weight": 1
                                        }
                                      }
                                    }
                                  ],
                                  "level": 1,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent"
                                  ],
                                  "containedInternalDependencies": {
                                    "src.app.model.GraphNode.VisibleGraphNode": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.model.service.stateHandler.GraphStateActionType": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
                                      "isCyclic": false,
                                      "weight": 1
                                    }
                                  }
                                },
                                {
                                  "name": "compound-node-container",
                                  "children": [
                                    {
                                      "name": "compound-node-container_component",
                                      "children": [
                                        {
                                          "leafId": "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent",
                                          "name": "CompoundNodeContainerComponent",
                                          "children": [],
                                          "level": 0,
                                          "containedLeaves": [
                                            "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent"
                                          ],
                                          "containedInternalDependencies": {
                                            "src.app.model.GraphNode.VisibleGraphNode": {
                                              "isCyclic": false,
                                              "weight": 1
                                            },
                                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                                              "isCyclic": false,
                                              "weight": 1
                                            },
                                            "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent": {
                                              "isCyclic": false,
                                              "weight": 1
                                            }
                                          }
                                        }
                                      ],
                                      "level": 0,
                                      "containedLeaves": [
                                        "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent"
                                      ],
                                      "containedInternalDependencies": {
                                        "src.app.model.GraphNode.VisibleGraphNode": {
                                          "isCyclic": false,
                                          "weight": 1
                                        },
                                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                                          "isCyclic": false,
                                          "weight": 1
                                        },
                                        "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent": {
                                          "isCyclic": false,
                                          "weight": 1
                                        }
                                      }
                                    }
                                  ],
                                  "level": 2,
                                  "containedLeaves": [
                                    "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent"
                                  ],
                                  "containedInternalDependencies": {
                                    "src.app.model.GraphNode.VisibleGraphNode": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                                      "isCyclic": false,
                                      "weight": 1
                                    },
                                    "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent": {
                                      "isCyclic": false,
                                      "weight": 1
                                    }
                                  }
                                }
                              ],
                              "level": 1,
                              "containedLeaves": [
                                "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent",
                                "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent",
                                "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent"
                              ],
                              "containedInternalDependencies": {
                                "src.app.model.GraphNode.VisibleGraphNode": {
                                  "isCyclic": false,
                                  "weight": 3
                                },
                                "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                                  "isCyclic": false,
                                  "weight": 2
                                },
                                "src.app.model.service.stateHandler.GraphStateActionType": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
                                  "isCyclic": false,
                                  "weight": 1
                                },
                                "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent": {
                                  "isCyclic": false,
                                  "weight": 1
                                }
                              }
                            }
                          ],
                          "level": 4,
                          "containedLeaves": [
                            "src.app.adapter.cytoscape.internal.ui.edge-display_service.REGULAR_EDGE_COLOR",
                            "src.app.adapter.cytoscape.internal.ui.edge-display_service.CYCLE_EDGE_COLOR",
                            "src.app.adapter.cytoscape.internal.ui.edge-display_service.FEEDBACK_EDGE_COLOR",
                            "src.app.adapter.cytoscape.internal.ui.edge-display_service.TWISTED_EDGE_COLOR",
                            "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService",
                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent",
                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent",
                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation",
                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent",
                            "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent",
                            "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent",
                            "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.edgeFilter.EdgeFilter": {
                              "isCyclic": false,
                              "weight": 2
                            },
                            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.edgeFilter.edgeType": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.GraphNode.VisibleGraphNode": {
                              "isCyclic": false,
                              "weight": 5
                            },
                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                              "isCyclic": false,
                              "weight": 4
                            },
                            "src.app.model.GraphEdge.GraphEdge": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.GraphStateActionType": {
                              "isCyclic": false,
                              "weight": 2
                            },
                            "src.app.model.service.feedbackEdge.isTwistedEdge": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.feedbackEdge.isFeedbackEdge": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
                              "isCyclic": false,
                              "weight": 2
                            },
                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        }
                      ],
                      "level": 0,
                      "containedLeaves": [
                        "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph",
                        "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates",
                        "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates",
                        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode",
                        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge",
                        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes",
                        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges",
                        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes",
                        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges",
                        "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options",
                        "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style",
                        "src.app.adapter.cytoscape.internal.highlight_service.HighlightService",
                        "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf",
                        "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors",
                        "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout",
                        "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout",
                        "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService",
                        "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService",
                        "src.app.adapter.cytoscape.internal.ui.edge-display_service.REGULAR_EDGE_COLOR",
                        "src.app.adapter.cytoscape.internal.ui.edge-display_service.CYCLE_EDGE_COLOR",
                        "src.app.adapter.cytoscape.internal.ui.edge-display_service.FEEDBACK_EDGE_COLOR",
                        "src.app.adapter.cytoscape.internal.ui.edge-display_service.TWISTED_EDGE_COLOR",
                        "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService",
                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent",
                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent",
                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation",
                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent",
                        "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent",
                        "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent",
                        "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent"
                      ],
                      "containedInternalDependencies": {
                        "src.app.model.GraphNode.VisibleGraphNode": {
                          "isCyclic": false,
                          "weight": 12
                        },
                        "src.app.model.GraphNode.GraphNode": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.lsmLayouting.Coordinates": {
                          "isCyclic": false,
                          "weight": 3
                        },
                        "src.app.model.service.lsmLayouting.CytoscapeValues": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.GraphEdge.GraphEdge": {
                          "isCyclic": false,
                          "weight": 4
                        },
                        "src.app.model.GraphNode.recursiveFind": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes": {
                          "isCyclic": false,
                          "weight": 2
                        },
                        "src.app.model.service.lsmLayouting.layout": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.stateHandler.GraphStateAction": {
                          "isCyclic": false,
                          "weight": 2
                        },
                        "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.highlight_service.HighlightService": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.stateHandler.GraphState": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.stateHandler.GraphStateActionType": {
                          "isCyclic": false,
                          "weight": 3
                        },
                        "src.app.model.service.stateHandler.getVisibleNodes": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.stateHandler.findGraphNode": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.edge_service.EdgeService": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.edgeFilter.EdgeFilter": {
                          "isCyclic": false,
                          "weight": 2
                        },
                        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.edgeFilter.edgeType": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                          "isCyclic": false,
                          "weight": 4
                        },
                        "src.app.model.service.feedbackEdge.isTwistedEdge": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.feedbackEdge.isFeedbackEdge": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
                          "isCyclic": false,
                          "weight": 2
                        },
                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent": {
                          "isCyclic": false,
                          "weight": 1
                        }
                      }
                    },
                    {
                      "name": "cytoscape_component",
                      "children": [
                        {
                          "leafId": "src.app.adapter.cytoscape.cytoscape_component.CytoscapeComponent",
                          "name": "CytoscapeComponent",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.adapter.cytoscape.cytoscape_component.CytoscapeComponent"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.stateHandler.GraphStateAction": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.GraphState": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        }
                      ],
                      "level": 1,
                      "containedLeaves": [
                        "src.app.adapter.cytoscape.cytoscape_component.CytoscapeComponent"
                      ],
                      "containedInternalDependencies": {
                        "src.app.model.service.stateHandler.GraphStateAction": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.stateHandler.GraphState": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService": {
                          "isCyclic": false,
                          "weight": 1
                        }
                      }
                    },
                    {
                      "name": "index",
                      "children": [
                        {
                          "leafId": "src.app.adapter.cytoscape.index.CytoscapeComponent",
                          "name": "CytoscapeComponent",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.adapter.cytoscape.index.CytoscapeComponent"
                          ],
                          "containedInternalDependencies": {
                            "src.app.adapter.cytoscape.cytoscape_component.CytoscapeComponent": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        }
                      ],
                      "level": 2,
                      "containedLeaves": [
                        "src.app.adapter.cytoscape.index.CytoscapeComponent"
                      ],
                      "containedInternalDependencies": {
                        "src.app.adapter.cytoscape.cytoscape_component.CytoscapeComponent": {
                          "isCyclic": false,
                          "weight": 1
                        }
                      }
                    }
                  ],
                  "level": 0,
                  "containedLeaves": [
                    "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph",
                    "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates",
                    "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates",
                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode",
                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge",
                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes",
                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges",
                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes",
                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges",
                    "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options",
                    "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style",
                    "src.app.adapter.cytoscape.internal.highlight_service.HighlightService",
                    "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf",
                    "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors",
                    "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout",
                    "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout",
                    "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService",
                    "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService",
                    "src.app.adapter.cytoscape.internal.ui.edge-display_service.REGULAR_EDGE_COLOR",
                    "src.app.adapter.cytoscape.internal.ui.edge-display_service.CYCLE_EDGE_COLOR",
                    "src.app.adapter.cytoscape.internal.ui.edge-display_service.FEEDBACK_EDGE_COLOR",
                    "src.app.adapter.cytoscape.internal.ui.edge-display_service.TWISTED_EDGE_COLOR",
                    "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService",
                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent",
                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent",
                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation",
                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent",
                    "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent",
                    "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent",
                    "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent",
                    "src.app.adapter.cytoscape.cytoscape_component.CytoscapeComponent",
                    "src.app.adapter.cytoscape.index.CytoscapeComponent"
                  ],
                  "containedInternalDependencies": {
                    "src.app.model.GraphNode.VisibleGraphNode": {
                      "isCyclic": false,
                      "weight": 12
                    },
                    "src.app.model.GraphNode.GraphNode": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.lsmLayouting.Coordinates": {
                      "isCyclic": false,
                      "weight": 3
                    },
                    "src.app.model.service.lsmLayouting.CytoscapeValues": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.GraphEdge.GraphEdge": {
                      "isCyclic": false,
                      "weight": 4
                    },
                    "src.app.model.GraphNode.recursiveFind": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes": {
                      "isCyclic": false,
                      "weight": 2
                    },
                    "src.app.model.service.lsmLayouting.layout": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.stateHandler.GraphStateAction": {
                      "isCyclic": false,
                      "weight": 3
                    },
                    "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.highlight_service.HighlightService": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.stateHandler.GraphState": {
                      "isCyclic": false,
                      "weight": 2
                    },
                    "src.app.model.service.stateHandler.GraphStateActionType": {
                      "isCyclic": false,
                      "weight": 3
                    },
                    "src.app.model.service.stateHandler.getVisibleNodes": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.stateHandler.findGraphNode": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService": {
                      "isCyclic": false,
                      "weight": 2
                    },
                    "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.edge_service.EdgeService": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.edgeFilter.EdgeFilter": {
                      "isCyclic": false,
                      "weight": 2
                    },
                    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.edgeFilter.edgeType": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                      "isCyclic": false,
                      "weight": 4
                    },
                    "src.app.model.service.feedbackEdge.isTwistedEdge": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.feedbackEdge.isFeedbackEdge": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
                      "isCyclic": false,
                      "weight": 3
                    },
                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.cytoscape.cytoscape_component.CytoscapeComponent": {
                      "isCyclic": false,
                      "weight": 1
                    }
                  }
                }
              ],
              "level": 1,
              "containedLeaves": [
                "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation",
                "src.app.adapter.analysis.internal.ProjectReport.Language",
                "src.app.adapter.analysis.internal.ProjectReport.NodeType",
                "src.app.adapter.analysis.internal.ProjectReport.ProjectNode",
                "src.app.adapter.analysis.internal.ProjectReport.NodeInformation",
                "src.app.adapter.analysis.internal.ProjectReport.ProjectReport",
                "src.app.adapter.analysis.internal.ProjectReport.getNodeId",
                "src.app.adapter.analysis.internal.ProjectReport.getChildren",
                "src.app.adapter.analysis.ProjectNodeConverter.toShallowGraphEdge",
                "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges",
                "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodeWithoutEdge",
                "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodes",
                "src.app.adapter.analysis.index.convertToGraphNodes",
                "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph",
                "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates",
                "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates",
                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode",
                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge",
                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes",
                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges",
                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes",
                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges",
                "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options",
                "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style",
                "src.app.adapter.cytoscape.internal.highlight_service.HighlightService",
                "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf",
                "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors",
                "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout",
                "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout",
                "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService",
                "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService",
                "src.app.adapter.cytoscape.internal.ui.edge-display_service.REGULAR_EDGE_COLOR",
                "src.app.adapter.cytoscape.internal.ui.edge-display_service.CYCLE_EDGE_COLOR",
                "src.app.adapter.cytoscape.internal.ui.edge-display_service.FEEDBACK_EDGE_COLOR",
                "src.app.adapter.cytoscape.internal.ui.edge-display_service.TWISTED_EDGE_COLOR",
                "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService",
                "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent",
                "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent",
                "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation",
                "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent",
                "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent",
                "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent",
                "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent",
                "src.app.adapter.cytoscape.cytoscape_component.CytoscapeComponent",
                "src.app.adapter.cytoscape.index.CytoscapeComponent"
              ],
              "containedInternalDependencies": {
                "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation": {
                  "isCyclic": false,
                  "weight": 3
                },
                "src.app.adapter.analysis.internal.ProjectReport.Language": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.analysis.internal.ProjectReport.NodeType": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
                  "isCyclic": false,
                  "weight": 5
                },
                "src.app.adapter.analysis.internal.ProjectReport.NodeInformation": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.analysis.internal.ProjectReport.getNodeId": {
                  "isCyclic": false,
                  "weight": 2
                },
                "src.app.model.ShallowGraphEdge.ShallowGraphEdge": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.GraphNode.GraphNode": {
                  "isCyclic": false,
                  "weight": 4
                },
                "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodeWithoutEdge": {
                  "isCyclic": true,
                  "weight": 1
                },
                "src.app.adapter.analysis.ProjectNodeConverter.toShallowGraphEdge": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges": {
                  "isCyclic": true,
                  "weight": 2
                },
                "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodes": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.GraphNode.VisibleGraphNode": {
                  "isCyclic": false,
                  "weight": 12
                },
                "src.app.model.service.lsmLayouting.Coordinates": {
                  "isCyclic": false,
                  "weight": 3
                },
                "src.app.model.service.lsmLayouting.CytoscapeValues": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.GraphEdge.GraphEdge": {
                  "isCyclic": false,
                  "weight": 4
                },
                "src.app.model.GraphNode.recursiveFind": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes": {
                  "isCyclic": false,
                  "weight": 2
                },
                "src.app.model.service.lsmLayouting.layout": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.stateHandler.GraphStateAction": {
                  "isCyclic": false,
                  "weight": 3
                },
                "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.highlight_service.HighlightService": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.stateHandler.GraphState": {
                  "isCyclic": false,
                  "weight": 2
                },
                "src.app.model.service.stateHandler.GraphStateActionType": {
                  "isCyclic": false,
                  "weight": 3
                },
                "src.app.model.service.stateHandler.getVisibleNodes": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.stateHandler.findGraphNode": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService": {
                  "isCyclic": false,
                  "weight": 2
                },
                "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.edge_service.EdgeService": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.edgeFilter.EdgeFilter": {
                  "isCyclic": false,
                  "weight": 2
                },
                "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.edgeFilter.edgeType": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
                  "isCyclic": false,
                  "weight": 4
                },
                "src.app.model.service.feedbackEdge.isTwistedEdge": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.feedbackEdge.isFeedbackEdge": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
                  "isCyclic": false,
                  "weight": 3
                },
                "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.cytoscape.cytoscape_component.CytoscapeComponent": {
                  "isCyclic": false,
                  "weight": 1
                }
              }
            },
            {
              "name": "ui",
              "children": [
                {
                  "name": "filter",
                  "children": [
                    {
                      "name": "filter_component",
                      "children": [
                        {
                          "leafId": "src.app.ui.filter.filter_component.FilterComponent",
                          "name": "FilterComponent",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.ui.filter.filter_component.FilterComponent"
                          ],
                          "containedInternalDependencies": {
                            "src.app.model.service.stateHandler.GraphStateAction": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.edgeFilter.EdgeFilterType": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.edgeFilter.EdgeFilter": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.stateHandler.GraphStateActionType": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.edgeFilter.showAllEdges": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.edgeFilter.showNoEdges": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.edgeFilter.showOnlyCyclicEdges": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.edgeFilter.showOnlyFeedbackEdges": {
                              "isCyclic": false,
                              "weight": 1
                            },
                            "src.app.model.service.edgeFilter.showFeedbackEdgesAndTwistedEdges": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        }
                      ],
                      "level": 0,
                      "containedLeaves": [
                        "src.app.ui.filter.filter_component.FilterComponent"
                      ],
                      "containedInternalDependencies": {
                        "src.app.model.service.stateHandler.GraphStateAction": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.edgeFilter.EdgeFilterType": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.edgeFilter.EdgeFilter": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.stateHandler.GraphStateActionType": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.edgeFilter.showAllEdges": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.edgeFilter.showNoEdges": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.edgeFilter.showOnlyCyclicEdges": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.edgeFilter.showOnlyFeedbackEdges": {
                          "isCyclic": false,
                          "weight": 1
                        },
                        "src.app.model.service.edgeFilter.showFeedbackEdgesAndTwistedEdges": {
                          "isCyclic": false,
                          "weight": 1
                        }
                      }
                    }
                  ],
                  "level": 0,
                  "containedLeaves": [
                    "src.app.ui.filter.filter_component.FilterComponent"
                  ],
                  "containedInternalDependencies": {
                    "src.app.model.service.stateHandler.GraphStateAction": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.edgeFilter.EdgeFilterType": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.edgeFilter.EdgeFilter": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.stateHandler.GraphStateActionType": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.edgeFilter.showAllEdges": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.edgeFilter.showNoEdges": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.edgeFilter.showOnlyCyclicEdges": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.edgeFilter.showOnlyFeedbackEdges": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.edgeFilter.showFeedbackEdgesAndTwistedEdges": {
                      "isCyclic": false,
                      "weight": 1
                    }
                  }
                },
                {
                  "name": "interaction-mode",
                  "children": [
                    {
                      "name": "interaction-mode_component",
                      "children": [
                        {
                          "leafId": "src.app.ui.interaction-mode.interaction-mode_component.InteractionModeComponent",
                          "name": "InteractionModeComponent",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.ui.interaction-mode.interaction-mode_component.InteractionModeComponent"
                          ],
                          "containedInternalDependencies": {}
                        }
                      ],
                      "level": 0,
                      "containedLeaves": [
                        "src.app.ui.interaction-mode.interaction-mode_component.InteractionModeComponent"
                      ],
                      "containedInternalDependencies": {}
                    }
                  ],
                  "level": 0,
                  "containedLeaves": [
                    "src.app.ui.interaction-mode.interaction-mode_component.InteractionModeComponent"
                  ],
                  "containedInternalDependencies": {}
                },
                {
                  "name": "json_loader",
                  "children": [
                    {
                      "name": "json_loader_component",
                      "children": [
                        {
                          "leafId": "src.app.ui.json_loader.json_loader_component.JsonLoaderComponent",
                          "name": "JsonLoaderComponent",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.ui.json_loader.json_loader_component.JsonLoaderComponent"
                          ],
                          "containedInternalDependencies": {}
                        }
                      ],
                      "level": 0,
                      "containedLeaves": [
                        "src.app.ui.json_loader.json_loader_component.JsonLoaderComponent"
                      ],
                      "containedInternalDependencies": {}
                    }
                  ],
                  "level": 0,
                  "containedLeaves": [
                    "src.app.ui.json_loader.json_loader_component.JsonLoaderComponent"
                  ],
                  "containedInternalDependencies": {}
                },
                {
                  "name": "version",
                  "children": [
                    {
                      "name": "version_service",
                      "children": [
                        {
                          "leafId": "src.app.ui.version.version_service.VersionService",
                          "name": "VersionService",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.ui.version.version_service.VersionService"
                          ],
                          "containedInternalDependencies": {}
                        }
                      ],
                      "level": 0,
                      "containedLeaves": [
                        "src.app.ui.version.version_service.VersionService"
                      ],
                      "containedInternalDependencies": {}
                    },
                    {
                      "name": "version_component",
                      "children": [
                        {
                          "leafId": "src.app.ui.version.version_component.VersionComponent",
                          "name": "VersionComponent",
                          "children": [],
                          "level": 0,
                          "containedLeaves": [
                            "src.app.ui.version.version_component.VersionComponent"
                          ],
                          "containedInternalDependencies": {
                            "src.app.ui.version.version_service.VersionService": {
                              "isCyclic": false,
                              "weight": 1
                            }
                          }
                        }
                      ],
                      "level": 1,
                      "containedLeaves": [
                        "src.app.ui.version.version_component.VersionComponent"
                      ],
                      "containedInternalDependencies": {
                        "src.app.ui.version.version_service.VersionService": {
                          "isCyclic": false,
                          "weight": 1
                        }
                      }
                    }
                  ],
                  "level": 0,
                  "containedLeaves": [
                    "src.app.ui.version.version_service.VersionService",
                    "src.app.ui.version.version_component.VersionComponent"
                  ],
                  "containedInternalDependencies": {
                    "src.app.ui.version.version_service.VersionService": {
                      "isCyclic": false,
                      "weight": 1
                    }
                  }
                }
              ],
              "level": 1,
              "containedLeaves": [
                "src.app.ui.filter.filter_component.FilterComponent",
                "src.app.ui.interaction-mode.interaction-mode_component.InteractionModeComponent",
                "src.app.ui.json_loader.json_loader_component.JsonLoaderComponent",
                "src.app.ui.version.version_service.VersionService",
                "src.app.ui.version.version_component.VersionComponent"
              ],
              "containedInternalDependencies": {
                "src.app.model.service.stateHandler.GraphStateAction": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.edgeFilter.EdgeFilterType": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.edgeFilter.EdgeFilter": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.stateHandler.GraphStateActionType": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.edgeFilter.showAllEdges": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.edgeFilter.showNoEdges": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.edgeFilter.showOnlyCyclicEdges": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.edgeFilter.showOnlyFeedbackEdges": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.edgeFilter.showFeedbackEdgesAndTwistedEdges": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.ui.version.version_service.VersionService": {
                  "isCyclic": false,
                  "weight": 1
                }
              }
            },
            {
              "name": "app_component",
              "children": [
                {
                  "leafId": "src.app.app_component.AppComponent",
                  "name": "AppComponent",
                  "children": [],
                  "level": 0,
                  "containedLeaves": [
                    "src.app.app_component.AppComponent"
                  ],
                  "containedInternalDependencies": {
                    "src.app.adapter.cytoscape.index.CytoscapeComponent": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.stateHandler.GraphStateAction": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.stateHandler.GraphStateActionType": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.adapter.analysis.index.convertToGraphNodes": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.ui.filter.filter_component.FilterComponent": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.ui.json_loader.json_loader_component.JsonLoaderComponent": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.ui.version.version_component.VersionComponent": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.ui.interaction-mode.interaction-mode_component.InteractionModeComponent": {
                      "isCyclic": false,
                      "weight": 1
                    },
                    "src.app.model.service.state_service.StateService": {
                      "isCyclic": false,
                      "weight": 1
                    }
                  }
                }
              ],
              "level": 2,
              "containedLeaves": [
                "src.app.app_component.AppComponent"
              ],
              "containedInternalDependencies": {
                "src.app.adapter.cytoscape.index.CytoscapeComponent": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.stateHandler.GraphStateAction": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.stateHandler.GraphStateActionType": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.adapter.analysis.index.convertToGraphNodes": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.ui.filter.filter_component.FilterComponent": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.ui.json_loader.json_loader_component.JsonLoaderComponent": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.ui.version.version_component.VersionComponent": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.ui.interaction-mode.interaction-mode_component.InteractionModeComponent": {
                  "isCyclic": false,
                  "weight": 1
                },
                "src.app.model.service.state_service.StateService": {
                  "isCyclic": false,
                  "weight": 1
                }
              }
            },
            {
              "name": "app_routes",
              "children": [
                {
                  "leafId": "src.app.app_routes.routes",
                  "name": "routes",
                  "children": [],
                  "level": 0,
                  "containedLeaves": [
                    "src.app.app_routes.routes"
                  ],
                  "containedInternalDependencies": {
                    "src.app.app_component.AppComponent": {
                      "isCyclic": false,
                      "weight": 1
                    }
                  }
                }
              ],
              "level": 3,
              "containedLeaves": [
                "src.app.app_routes.routes"
              ],
              "containedInternalDependencies": {
                "src.app.app_component.AppComponent": {
                  "isCyclic": false,
                  "weight": 1
                }
              }
            },
            {
              "name": "app_config",
              "children": [
                {
                  "leafId": "src.app.app_config.appConfig",
                  "name": "appConfig",
                  "children": [],
                  "level": 0,
                  "containedLeaves": [
                    "src.app.app_config.appConfig"
                  ],
                  "containedInternalDependencies": {
                    "src.app.app_routes.routes": {
                      "isCyclic": false,
                      "weight": 1
                    }
                  }
                }
              ],
              "level": 4,
              "containedLeaves": [
                "src.app.app_config.appConfig"
              ],
              "containedInternalDependencies": {
                "src.app.app_routes.routes": {
                  "isCyclic": false,
                  "weight": 1
                }
              }
            }
          ],
          "level": 0,
          "containedLeaves": [
            "src.app.common.utils.addTo",
            "src.app.common.utils.replaceIfBigger",
            "src.app.common.utils.getElementOrZeroIfNotExists",
            "src.app.common.utils.sumUpTo",
            "src.app.model.ShallowGraphEdge.ShallowGraphEdge",
            "src.app.model.GraphNode.GraphNode",
            "src.app.model.GraphNode.VisibleGraphNode",
            "src.app.model.GraphNode.getNodeAndAllChildrenRecursively",
            "src.app.model.GraphNode.getSuccessorIds",
            "src.app.model.GraphNode.recursiveFind",
            "src.app.model.GraphEdge.GraphEdge",
            "src.app.model.service.feedbackEdge.findGreatestCommonAncestor",
            "src.app.model.service.feedbackEdge.isPointingUpwards",
            "src.app.model.service.feedbackEdge.isTwistedEdge",
            "src.app.model.service.feedbackEdge.isFeedbackEdge",
            "src.app.model.service.lsmLayouting.PADDING_BETWEEN_NODES",
            "src.app.model.service.lsmLayouting.PADDING_BETWEEN_LEVELS",
            "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel",
            "src.app.model.service.lsmLayouting.CytoscapeValues",
            "src.app.model.service.lsmLayouting.Coordinates",
            "src.app.model.service.lsmLayouting.SpaceRequirement",
            "src.app.model.service.lsmLayouting.RelativePositionOfNode",
            "src.app.model.service.lsmLayouting.calculateRequiredSpace",
            "src.app.model.service.lsmLayouting.calculateSpaceRequirementsOfChildren",
            "src.app.model.service.lsmLayouting.layoutSubgraph",
            "src.app.model.service.lsmLayouting.layout",
            "src.app.model.service.edgeFilter.EdgeFilterType",
            "src.app.model.service.edgeFilter.EdgeFilterResult",
            "src.app.model.service.edgeFilter.EdgeType",
            "src.app.model.service.edgeFilter.EdgeFilter",
            "src.app.model.service.edgeFilter.edgeType",
            "src.app.model.service.edgeFilter.showNoEdges",
            "src.app.model.service.edgeFilter.showOnlyFeedbackEdges",
            "src.app.model.service.edgeFilter.showFeedbackEdgesAndTwistedEdges",
            "src.app.model.service.edgeFilter.showOnlyCyclicEdges",
            "src.app.model.service.edgeFilter.showAllEdges",
            "src.app.model.service.stateHandler.isNodeOrAncestorIgnored",
            "src.app.model.service.stateHandler.GraphStateActionType",
            "src.app.model.service.stateHandler.GraphState",
            "src.app.model.service.stateHandler.GraphStateAction",
            "src.app.model.service.stateHandler.toVisibleGraphNode",
            "src.app.model.service.stateHandler.buildGraphState",
            "src.app.model.service.stateHandler.getVisibleNodes",
            "src.app.model.service.stateHandler.findGraphNode",
            "src.app.model.service.stateHandler.graphStateReducer",
            "src.app.model.service.edge_service.EdgeService",
            "src.app.model.service.state_service.StateService",
            "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation",
            "src.app.adapter.analysis.internal.ProjectReport.Language",
            "src.app.adapter.analysis.internal.ProjectReport.NodeType",
            "src.app.adapter.analysis.internal.ProjectReport.ProjectNode",
            "src.app.adapter.analysis.internal.ProjectReport.NodeInformation",
            "src.app.adapter.analysis.internal.ProjectReport.ProjectReport",
            "src.app.adapter.analysis.internal.ProjectReport.getNodeId",
            "src.app.adapter.analysis.internal.ProjectReport.getChildren",
            "src.app.adapter.analysis.ProjectNodeConverter.toShallowGraphEdge",
            "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges",
            "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodeWithoutEdge",
            "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodes",
            "src.app.adapter.analysis.index.convertToGraphNodes",
            "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph",
            "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates",
            "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates",
            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode",
            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge",
            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes",
            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges",
            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes",
            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges",
            "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options",
            "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style",
            "src.app.adapter.cytoscape.internal.highlight_service.HighlightService",
            "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf",
            "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors",
            "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout",
            "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout",
            "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService",
            "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService",
            "src.app.adapter.cytoscape.internal.ui.edge-display_service.REGULAR_EDGE_COLOR",
            "src.app.adapter.cytoscape.internal.ui.edge-display_service.CYCLE_EDGE_COLOR",
            "src.app.adapter.cytoscape.internal.ui.edge-display_service.FEEDBACK_EDGE_COLOR",
            "src.app.adapter.cytoscape.internal.ui.edge-display_service.TWISTED_EDGE_COLOR",
            "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService",
            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent",
            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent",
            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation",
            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent",
            "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent",
            "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent",
            "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent",
            "src.app.adapter.cytoscape.cytoscape_component.CytoscapeComponent",
            "src.app.adapter.cytoscape.index.CytoscapeComponent",
            "src.app.ui.filter.filter_component.FilterComponent",
            "src.app.ui.interaction-mode.interaction-mode_component.InteractionModeComponent",
            "src.app.ui.json_loader.json_loader_component.JsonLoaderComponent",
            "src.app.ui.version.version_service.VersionService",
            "src.app.ui.version.version_component.VersionComponent",
            "src.app.app_component.AppComponent",
            "src.app.app_routes.routes",
            "src.app.app_config.appConfig"
          ],
          "containedInternalDependencies": {
            "src.app.model.ShallowGraphEdge.ShallowGraphEdge": {
              "isCyclic": false,
              "weight": 2
            },
            "src.app.model.GraphNode.GraphNode": {
              "isCyclic": false,
              "weight": 14
            },
            "src.app.model.GraphNode.getNodeAndAllChildrenRecursively": {
              "isCyclic": false,
              "weight": 3
            },
            "src.app.model.GraphNode.VisibleGraphNode": {
              "isCyclic": false,
              "weight": 23
            },
            "src.app.model.GraphEdge.GraphEdge": {
              "isCyclic": false,
              "weight": 15
            },
            "src.app.model.service.feedbackEdge.findGreatestCommonAncestor": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.model.service.feedbackEdge.isPointingUpwards": {
              "isCyclic": false,
              "weight": 2
            },
            "src.app.model.service.lsmLayouting.calculateRequiredSpace": {
              "isCyclic": true,
              "weight": 2
            },
            "src.app.model.service.lsmLayouting.Coordinates": {
              "isCyclic": false,
              "weight": 5
            },
            "src.app.model.service.lsmLayouting.SpaceRequirement": {
              "isCyclic": false,
              "weight": 2
            },
            "src.app.model.service.lsmLayouting.CytoscapeValues": {
              "isCyclic": false,
              "weight": 2
            },
            "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel": {
              "isCyclic": true,
              "weight": 2
            },
            "src.app.model.service.lsmLayouting.RelativePositionOfNode": {
              "isCyclic": false,
              "weight": 2
            },
            "src.app.model.service.lsmLayouting.calculateSpaceRequirementsOfChildren": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.model.service.lsmLayouting.layoutSubgraph": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.model.service.edgeFilter.EdgeFilterResult": {
              "isCyclic": false,
              "weight": 3
            },
            "src.app.model.service.edgeFilter.EdgeType": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.model.service.edgeFilter.EdgeFilter": {
              "isCyclic": false,
              "weight": 10
            },
            "src.app.model.service.feedbackEdge.isFeedbackEdge": {
              "isCyclic": false,
              "weight": 5
            },
            "src.app.model.service.feedbackEdge.isTwistedEdge": {
              "isCyclic": false,
              "weight": 3
            },
            "src.app.model.service.stateHandler.GraphState": {
              "isCyclic": false,
              "weight": 9
            },
            "src.app.model.service.stateHandler.isNodeOrAncestorIgnored": {
              "isCyclic": false,
              "weight": 2
            },
            "src.app.model.service.edgeFilter.showOnlyFeedbackEdges": {
              "isCyclic": false,
              "weight": 2
            },
            "src.app.model.service.stateHandler.toVisibleGraphNode": {
              "isCyclic": false,
              "weight": 2
            },
            "src.app.model.service.stateHandler.GraphStateAction": {
              "isCyclic": false,
              "weight": 7
            },
            "src.app.model.service.stateHandler.GraphStateActionType": {
              "isCyclic": false,
              "weight": 6
            },
            "src.app.model.service.stateHandler.buildGraphState": {
              "isCyclic": false,
              "weight": 2
            },
            "src.app.model.service.stateHandler.findGraphNode": {
              "isCyclic": false,
              "weight": 2
            },
            "src.app.model.service.stateHandler.getVisibleNodes": {
              "isCyclic": false,
              "weight": 2
            },
            "src.app.model.service.stateHandler.graphStateReducer": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation": {
              "isCyclic": false,
              "weight": 3
            },
            "src.app.adapter.analysis.internal.ProjectReport.Language": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.analysis.internal.ProjectReport.NodeType": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
              "isCyclic": false,
              "weight": 5
            },
            "src.app.adapter.analysis.internal.ProjectReport.NodeInformation": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.analysis.internal.ProjectReport.getNodeId": {
              "isCyclic": false,
              "weight": 2
            },
            "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodeWithoutEdge": {
              "isCyclic": true,
              "weight": 1
            },
            "src.app.adapter.analysis.ProjectNodeConverter.toShallowGraphEdge": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges": {
              "isCyclic": true,
              "weight": 2
            },
            "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodes": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.model.GraphNode.recursiveFind": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes": {
              "isCyclic": false,
              "weight": 2
            },
            "src.app.model.service.lsmLayouting.layout": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.highlight_service.HighlightService": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService": {
              "isCyclic": false,
              "weight": 2
            },
            "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.model.service.edge_service.EdgeService": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.model.service.edgeFilter.edgeType": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
              "isCyclic": false,
              "weight": 4
            },
            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
              "isCyclic": false,
              "weight": 3
            },
            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.cytoscape_component.CytoscapeComponent": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.model.service.edgeFilter.EdgeFilterType": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.model.service.edgeFilter.showAllEdges": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.model.service.edgeFilter.showNoEdges": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.model.service.edgeFilter.showOnlyCyclicEdges": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.model.service.edgeFilter.showFeedbackEdgesAndTwistedEdges": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.ui.version.version_service.VersionService": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.cytoscape.index.CytoscapeComponent": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.adapter.analysis.index.convertToGraphNodes": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.ui.filter.filter_component.FilterComponent": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.ui.json_loader.json_loader_component.JsonLoaderComponent": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.ui.version.version_component.VersionComponent": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.ui.interaction-mode.interaction-mode_component.InteractionModeComponent": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.model.service.state_service.StateService": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.app_component.AppComponent": {
              "isCyclic": false,
              "weight": 1
            },
            "src.app.app_routes.routes": {
              "isCyclic": false,
              "weight": 1
            }
          }
        }
      ],
      "level": 0,
      "containedLeaves": [
        "src.app.common.utils.addTo",
        "src.app.common.utils.replaceIfBigger",
        "src.app.common.utils.getElementOrZeroIfNotExists",
        "src.app.common.utils.sumUpTo",
        "src.app.model.ShallowGraphEdge.ShallowGraphEdge",
        "src.app.model.GraphNode.GraphNode",
        "src.app.model.GraphNode.VisibleGraphNode",
        "src.app.model.GraphNode.getNodeAndAllChildrenRecursively",
        "src.app.model.GraphNode.getSuccessorIds",
        "src.app.model.GraphNode.recursiveFind",
        "src.app.model.GraphEdge.GraphEdge",
        "src.app.model.service.feedbackEdge.findGreatestCommonAncestor",
        "src.app.model.service.feedbackEdge.isPointingUpwards",
        "src.app.model.service.feedbackEdge.isTwistedEdge",
        "src.app.model.service.feedbackEdge.isFeedbackEdge",
        "src.app.model.service.lsmLayouting.PADDING_BETWEEN_NODES",
        "src.app.model.service.lsmLayouting.PADDING_BETWEEN_LEVELS",
        "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel",
        "src.app.model.service.lsmLayouting.CytoscapeValues",
        "src.app.model.service.lsmLayouting.Coordinates",
        "src.app.model.service.lsmLayouting.SpaceRequirement",
        "src.app.model.service.lsmLayouting.RelativePositionOfNode",
        "src.app.model.service.lsmLayouting.calculateRequiredSpace",
        "src.app.model.service.lsmLayouting.calculateSpaceRequirementsOfChildren",
        "src.app.model.service.lsmLayouting.layoutSubgraph",
        "src.app.model.service.lsmLayouting.layout",
        "src.app.model.service.edgeFilter.EdgeFilterType",
        "src.app.model.service.edgeFilter.EdgeFilterResult",
        "src.app.model.service.edgeFilter.EdgeType",
        "src.app.model.service.edgeFilter.EdgeFilter",
        "src.app.model.service.edgeFilter.edgeType",
        "src.app.model.service.edgeFilter.showNoEdges",
        "src.app.model.service.edgeFilter.showOnlyFeedbackEdges",
        "src.app.model.service.edgeFilter.showFeedbackEdgesAndTwistedEdges",
        "src.app.model.service.edgeFilter.showOnlyCyclicEdges",
        "src.app.model.service.edgeFilter.showAllEdges",
        "src.app.model.service.stateHandler.isNodeOrAncestorIgnored",
        "src.app.model.service.stateHandler.GraphStateActionType",
        "src.app.model.service.stateHandler.GraphState",
        "src.app.model.service.stateHandler.GraphStateAction",
        "src.app.model.service.stateHandler.toVisibleGraphNode",
        "src.app.model.service.stateHandler.buildGraphState",
        "src.app.model.service.stateHandler.getVisibleNodes",
        "src.app.model.service.stateHandler.findGraphNode",
        "src.app.model.service.stateHandler.graphStateReducer",
        "src.app.model.service.edge_service.EdgeService",
        "src.app.model.service.state_service.StateService",
        "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation",
        "src.app.adapter.analysis.internal.ProjectReport.Language",
        "src.app.adapter.analysis.internal.ProjectReport.NodeType",
        "src.app.adapter.analysis.internal.ProjectReport.ProjectNode",
        "src.app.adapter.analysis.internal.ProjectReport.NodeInformation",
        "src.app.adapter.analysis.internal.ProjectReport.ProjectReport",
        "src.app.adapter.analysis.internal.ProjectReport.getNodeId",
        "src.app.adapter.analysis.internal.ProjectReport.getChildren",
        "src.app.adapter.analysis.ProjectNodeConverter.toShallowGraphEdge",
        "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges",
        "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodeWithoutEdge",
        "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodes",
        "src.app.adapter.analysis.index.convertToGraphNodes",
        "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph",
        "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates",
        "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates",
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode",
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge",
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes",
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges",
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes",
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges",
        "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options",
        "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style",
        "src.app.adapter.cytoscape.internal.highlight_service.HighlightService",
        "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf",
        "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors",
        "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout",
        "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout",
        "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService",
        "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService",
        "src.app.adapter.cytoscape.internal.ui.edge-display_service.REGULAR_EDGE_COLOR",
        "src.app.adapter.cytoscape.internal.ui.edge-display_service.CYCLE_EDGE_COLOR",
        "src.app.adapter.cytoscape.internal.ui.edge-display_service.FEEDBACK_EDGE_COLOR",
        "src.app.adapter.cytoscape.internal.ui.edge-display_service.TWISTED_EDGE_COLOR",
        "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService",
        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent",
        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent",
        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation",
        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent",
        "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent",
        "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent",
        "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent",
        "src.app.adapter.cytoscape.cytoscape_component.CytoscapeComponent",
        "src.app.adapter.cytoscape.index.CytoscapeComponent",
        "src.app.ui.filter.filter_component.FilterComponent",
        "src.app.ui.interaction-mode.interaction-mode_component.InteractionModeComponent",
        "src.app.ui.json_loader.json_loader_component.JsonLoaderComponent",
        "src.app.ui.version.version_service.VersionService",
        "src.app.ui.version.version_component.VersionComponent",
        "src.app.app_component.AppComponent",
        "src.app.app_routes.routes",
        "src.app.app_config.appConfig"
      ],
      "containedInternalDependencies": {
        "src.app.model.ShallowGraphEdge.ShallowGraphEdge": {
          "isCyclic": false,
          "weight": 2
        },
        "src.app.model.GraphNode.GraphNode": {
          "isCyclic": false,
          "weight": 14
        },
        "src.app.model.GraphNode.getNodeAndAllChildrenRecursively": {
          "isCyclic": false,
          "weight": 3
        },
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 23
        },
        "src.app.model.GraphEdge.GraphEdge": {
          "isCyclic": false,
          "weight": 15
        },
        "src.app.model.service.feedbackEdge.findGreatestCommonAncestor": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.feedbackEdge.isPointingUpwards": {
          "isCyclic": false,
          "weight": 2
        },
        "src.app.model.service.lsmLayouting.calculateRequiredSpace": {
          "isCyclic": true,
          "weight": 2
        },
        "src.app.model.service.lsmLayouting.Coordinates": {
          "isCyclic": false,
          "weight": 5
        },
        "src.app.model.service.lsmLayouting.SpaceRequirement": {
          "isCyclic": false,
          "weight": 2
        },
        "src.app.model.service.lsmLayouting.CytoscapeValues": {
          "isCyclic": false,
          "weight": 2
        },
        "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel": {
          "isCyclic": true,
          "weight": 2
        },
        "src.app.model.service.lsmLayouting.RelativePositionOfNode": {
          "isCyclic": false,
          "weight": 2
        },
        "src.app.model.service.lsmLayouting.calculateSpaceRequirementsOfChildren": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.lsmLayouting.layoutSubgraph": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.EdgeFilterResult": {
          "isCyclic": false,
          "weight": 3
        },
        "src.app.model.service.edgeFilter.EdgeType": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.EdgeFilter": {
          "isCyclic": false,
          "weight": 10
        },
        "src.app.model.service.feedbackEdge.isFeedbackEdge": {
          "isCyclic": false,
          "weight": 5
        },
        "src.app.model.service.feedbackEdge.isTwistedEdge": {
          "isCyclic": false,
          "weight": 3
        },
        "src.app.model.service.stateHandler.GraphState": {
          "isCyclic": false,
          "weight": 9
        },
        "src.app.model.service.stateHandler.isNodeOrAncestorIgnored": {
          "isCyclic": false,
          "weight": 2
        },
        "src.app.model.service.edgeFilter.showOnlyFeedbackEdges": {
          "isCyclic": false,
          "weight": 2
        },
        "src.app.model.service.stateHandler.toVisibleGraphNode": {
          "isCyclic": false,
          "weight": 2
        },
        "src.app.model.service.stateHandler.GraphStateAction": {
          "isCyclic": false,
          "weight": 7
        },
        "src.app.model.service.stateHandler.GraphStateActionType": {
          "isCyclic": false,
          "weight": 6
        },
        "src.app.model.service.stateHandler.buildGraphState": {
          "isCyclic": false,
          "weight": 2
        },
        "src.app.model.service.stateHandler.findGraphNode": {
          "isCyclic": false,
          "weight": 2
        },
        "src.app.model.service.stateHandler.getVisibleNodes": {
          "isCyclic": false,
          "weight": 2
        },
        "src.app.model.service.stateHandler.graphStateReducer": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation": {
          "isCyclic": false,
          "weight": 3
        },
        "src.app.adapter.analysis.internal.ProjectReport.Language": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.analysis.internal.ProjectReport.NodeType": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
          "isCyclic": false,
          "weight": 5
        },
        "src.app.adapter.analysis.internal.ProjectReport.NodeInformation": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.analysis.internal.ProjectReport.getNodeId": {
          "isCyclic": false,
          "weight": 2
        },
        "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodeWithoutEdge": {
          "isCyclic": true,
          "weight": 1
        },
        "src.app.adapter.analysis.ProjectNodeConverter.toShallowGraphEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges": {
          "isCyclic": true,
          "weight": 2
        },
        "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodes": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphNode.recursiveFind": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes": {
          "isCyclic": false,
          "weight": 2
        },
        "src.app.model.service.lsmLayouting.layout": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.highlight_service.HighlightService": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService": {
          "isCyclic": false,
          "weight": 2
        },
        "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edge_service.EdgeService": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.edgeType": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
          "isCyclic": false,
          "weight": 4
        },
        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
          "isCyclic": false,
          "weight": 3
        },
        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.cytoscape_component.CytoscapeComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.EdgeFilterType": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.showAllEdges": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.showNoEdges": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.showOnlyCyclicEdges": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.showFeedbackEdgesAndTwistedEdges": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.ui.version.version_service.VersionService": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.index.CytoscapeComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.analysis.index.convertToGraphNodes": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.ui.filter.filter_component.FilterComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.ui.json_loader.json_loader_component.JsonLoaderComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.ui.version.version_component.VersionComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.ui.interaction-mode.interaction-mode_component.InteractionModeComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.state_service.StateService": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.app_component.AppComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.app_routes.routes": {
          "isCyclic": false,
          "weight": 1
        }
      }
    }
  ],
  "leaves": {
    "cypress_config.cypress_config_DEFAULT_EXPORT": {
      "id": "cypress_config.cypress_config_DEFAULT_EXPORT",
      "name": "cypress_config_DEFAULT_EXPORT",
      "physicalPath": "cypress.config.ts",
      "nodeType": "REEXPORT",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.adapter.analysis.index.convertToGraphNodes": {
      "id": "src.app.adapter.analysis.index.convertToGraphNodes",
      "name": "convertToGraphNodes",
      "physicalPath": "src\\app\\adapter\\analysis\\index.ts",
      "nodeType": "VARIABLE",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodes": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.analysis.internal.ProjectReport.ProjectReport": {
      "id": "src.app.adapter.analysis.internal.ProjectReport.ProjectReport",
      "name": "ProjectReport",
      "physicalPath": "src\\app\\adapter\\analysis\\internal\\ProjectReport.ts",
      "nodeType": "INTERFACE",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.analysis.internal.ProjectReport.NodeInformation": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
      "id": "src.app.adapter.analysis.internal.ProjectReport.ProjectNode",
      "name": "ProjectNode",
      "physicalPath": "src\\app\\adapter\\analysis\\internal\\ProjectReport.ts",
      "nodeType": "INTERFACE",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation": {
      "id": "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation",
      "name": "EdgeMetaInformation",
      "physicalPath": "src\\app\\adapter\\analysis\\internal\\ProjectReport.ts",
      "nodeType": "INTERFACE",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.adapter.analysis.internal.ProjectReport.NodeInformation": {
      "id": "src.app.adapter.analysis.internal.ProjectReport.NodeInformation",
      "name": "NodeInformation",
      "physicalPath": "src\\app\\adapter\\analysis\\internal\\ProjectReport.ts",
      "nodeType": "INTERFACE",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.adapter.analysis.internal.ProjectReport.Language": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.analysis.internal.ProjectReport.NodeType": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.analysis.internal.ProjectReport.Language": {
      "id": "src.app.adapter.analysis.internal.ProjectReport.Language",
      "name": "Language",
      "physicalPath": "src\\app\\adapter\\analysis\\internal\\ProjectReport.ts",
      "nodeType": "ENUM",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.adapter.analysis.internal.ProjectReport.NodeType": {
      "id": "src.app.adapter.analysis.internal.ProjectReport.NodeType",
      "name": "NodeType",
      "physicalPath": "src\\app\\adapter\\analysis\\internal\\ProjectReport.ts",
      "nodeType": "ENUM",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.adapter.analysis.internal.ProjectReport.getChildren": {
      "id": "src.app.adapter.analysis.internal.ProjectReport.getChildren",
      "name": "getChildren",
      "physicalPath": "src\\app\\adapter\\analysis\\internal\\ProjectReport.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.analysis.internal.ProjectReport.getNodeId": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.analysis.internal.ProjectReport.getNodeId": {
      "id": "src.app.adapter.analysis.internal.ProjectReport.getNodeId",
      "name": "getNodeId",
      "physicalPath": "src\\app\\adapter\\analysis\\internal\\ProjectReport.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodeWithoutEdge": {
      "id": "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodeWithoutEdge",
      "name": "convertToGraphNodeWithoutEdge",
      "physicalPath": "src\\app\\adapter\\analysis\\ProjectNodeConverter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphNode.GraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.analysis.internal.ProjectReport.getNodeId": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.analysis.ProjectNodeConverter.toShallowGraphEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges": {
          "isCyclic": true,
          "weight": 1
        }
      }
    },
    "src.app.adapter.analysis.ProjectNodeConverter.toShallowGraphEdge": {
      "id": "src.app.adapter.analysis.ProjectNodeConverter.toShallowGraphEdge",
      "name": "toShallowGraphEdge",
      "physicalPath": "src\\app\\adapter\\analysis\\ProjectNodeConverter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.adapter.analysis.internal.ProjectReport.EdgeMetaInformation": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.ShallowGraphEdge.ShallowGraphEdge": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodes": {
      "id": "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodes",
      "name": "convertToGraphNodes",
      "physicalPath": "src\\app\\adapter\\analysis\\ProjectNodeConverter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.GraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges": {
      "id": "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodesWithLightEdges",
      "name": "convertToGraphNodesWithLightEdges",
      "physicalPath": "src\\app\\adapter\\analysis\\ProjectNodeConverter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.adapter.analysis.internal.ProjectReport.ProjectNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphNode.GraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.analysis.ProjectNodeConverter.convertToGraphNodeWithoutEdge": {
          "isCyclic": true,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.cytoscape_component.CytoscapeComponent": {
      "id": "src.app.adapter.cytoscape.cytoscape_component.CytoscapeComponent",
      "name": "CytoscapeComponent",
      "physicalPath": "src\\app\\adapter\\cytoscape\\cytoscape.component.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.stateHandler.GraphStateAction": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.GraphState": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.index.CytoscapeComponent": {
      "id": "src.app.adapter.cytoscape.index.CytoscapeComponent",
      "name": "CytoscapeComponent",
      "physicalPath": "src\\app\\adapter\\cytoscape\\index.ts",
      "nodeType": "VARIABLE",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.adapter.cytoscape.cytoscape_component.CytoscapeComponent": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph": {
      "id": "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph",
      "name": "flattenGraph",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\converter\\coordinateConverter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates": {
      "id": "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates",
      "name": "calculateAbsoluteCoordinates",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\converter\\coordinateConverter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.GraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.lsmLayouting.Coordinates": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.lsmLayouting.CytoscapeValues": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates": {
      "id": "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates",
      "name": "toAbsoluteCoordinates",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\converter\\coordinateConverter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.lsmLayouting.Coordinates": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.coordinateConverter.flattenGraph": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.coordinateConverter.calculateAbsoluteCoordinates": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode": {
      "id": "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode",
      "name": "toCytoscapeNode",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\converter\\elementDefinitionConverter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge": {
      "id": "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge",
      "name": "toCytoscapeEdge",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\converter\\elementDefinitionConverter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphEdge.GraphEdge": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes": {
      "id": "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes",
      "name": "toCytoscapeNodes",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\converter\\elementDefinitionConverter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNode": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges": {
      "id": "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges",
      "name": "toCytoscapeEdges",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\converter\\elementDefinitionConverter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphEdge.GraphEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdge": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes": {
      "id": "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes",
      "name": "toVisibleGraphNodes",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\converter\\elementDefinitionConverter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges": {
      "id": "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges",
      "name": "toGraphEdges",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\converter\\elementDefinitionConverter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphEdge.GraphEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphNode.recursiveFind": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout": {
      "id": "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout",
      "name": "CyLsmLayout",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\CyLsmLayout.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.lsmLayouting.Coordinates": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.coordinateConverter.toAbsoluteCoordinates": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.lsmLayouting.layout": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout": {
      "id": "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout",
      "name": "lsmLayout",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\CyLsmLayout.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.adapter.cytoscape.internal.CyLsmLayout.CyLsmLayout": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService": {
      "id": "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService",
      "name": "CytoscapeService",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\cytoscape.service.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.stateHandler.GraphStateAction": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.highlight_service.HighlightService": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.CyLsmLayout.lsmLayout": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options": {
      "id": "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_options",
      "name": "cytoscape_options",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\cytoscapeConfig.ts",
      "nodeType": "VARIABLE",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style": {
      "id": "src.app.adapter.cytoscape.internal.cytoscapeConfig.cytoscape_style",
      "name": "cytoscape_style",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\cytoscapeConfig.ts",
      "nodeType": "VARIABLE",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.adapter.cytoscape.internal.highlight_service.HighlightService": {
      "id": "src.app.adapter.cytoscape.internal.highlight_service.HighlightService",
      "name": "HighlightService",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\highlight.service.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf": {
      "id": "src.app.adapter.cytoscape.internal.nodeUtils.getSubtreeOf",
      "name": "getSubtreeOf",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\nodeUtils.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors": {
      "id": "src.app.adapter.cytoscape.internal.nodeUtils.getAncestors",
      "name": "getAncestors",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\nodeUtils.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
      "id": "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService",
      "name": "CytoscapeStateService",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\state\\cytoscape-state.service.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.stateHandler.GraphStateAction": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.GraphState": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.GraphStateActionType": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.getVisibleNodes": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeNodes": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.findGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toCytoscapeEdges": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.cytoscape_service.CytoscapeService": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edge_service.EdgeService": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent": {
      "id": "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent",
      "name": "CompoundNodeComponent",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\ui\\compound-nodes\\compound-node\\compound-node.component.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.GraphStateActionType": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent": {
      "id": "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node-container.compound-node-container_component.CompoundNodeContainerComponent",
      "name": "CompoundNodeContainerComponent",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\ui\\compound-nodes\\compound-node-container\\compound-node-container.component.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.ui.compound-nodes.compound-node.compound-node_component.CompoundNodeComponent": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent": {
      "id": "src.app.adapter.cytoscape.internal.ui.compound-nodes.menu.compound-node-menu_component.CompoundNodeMenuComponent",
      "name": "CompoundNodeMenuComponent",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\ui\\compound-nodes\\menu\\compound-node-menu.component.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.ui.edge-display_service.REGULAR_EDGE_COLOR": {
      "id": "src.app.adapter.cytoscape.internal.ui.edge-display_service.REGULAR_EDGE_COLOR",
      "name": "REGULAR_EDGE_COLOR",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\ui\\edge-display.service.ts",
      "nodeType": "VARIABLE",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.adapter.cytoscape.internal.ui.edge-display_service.CYCLE_EDGE_COLOR": {
      "id": "src.app.adapter.cytoscape.internal.ui.edge-display_service.CYCLE_EDGE_COLOR",
      "name": "CYCLE_EDGE_COLOR",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\ui\\edge-display.service.ts",
      "nodeType": "VARIABLE",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.adapter.cytoscape.internal.ui.edge-display_service.FEEDBACK_EDGE_COLOR": {
      "id": "src.app.adapter.cytoscape.internal.ui.edge-display_service.FEEDBACK_EDGE_COLOR",
      "name": "FEEDBACK_EDGE_COLOR",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\ui\\edge-display.service.ts",
      "nodeType": "VARIABLE",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.adapter.cytoscape.internal.ui.edge-display_service.TWISTED_EDGE_COLOR": {
      "id": "src.app.adapter.cytoscape.internal.ui.edge-display_service.TWISTED_EDGE_COLOR",
      "name": "TWISTED_EDGE_COLOR",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\ui\\edge-display.service.ts",
      "nodeType": "VARIABLE",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService": {
      "id": "src.app.adapter.cytoscape.internal.ui.edge-display_service.EdgeDisplayService",
      "name": "EdgeDisplayService",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\ui\\edge-display.service.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.edgeFilter.EdgeFilter": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toVisibleGraphNodes": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.converter.elementDefinitionConverter.toGraphEdges": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.edgeType": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent": {
      "id": "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent",
      "name": "InteractionBarComponent",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\ui\\non-compound-nodes\\interaction-bar\\interaction-bar.component.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent": {
      "id": "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent",
      "name": "NonCompoundNodeComponent",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\ui\\non-compound-nodes\\non-compound-node\\non-compound-node.component.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.EdgeFilter": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphEdge.GraphEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.GraphStateActionType": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.feedbackEdge.isTwistedEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.feedbackEdge.isFeedbackEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.interaction-bar.interaction-bar_component.InteractionBarComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.state.cytoscape-state_service.CytoscapeStateService": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent": {
      "id": "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.OtherNodeContainerComponent",
      "name": "OtherNodeContainerComponent",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\ui\\non-compound-nodes\\other-node-container\\other-node-container.component.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.non-compound-node.non-compound-node_component.NonCompoundNodeComponent": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation": {
      "id": "src.app.adapter.cytoscape.internal.ui.non-compound-nodes.other-node-container.other-node-container_component.RenderInformation",
      "name": "RenderInformation",
      "physicalPath": "src\\app\\adapter\\cytoscape\\internal\\ui\\non-compound-nodes\\other-node-container\\other-node-container.component.ts",
      "nodeType": "INTERFACE",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.app_component.AppComponent": {
      "id": "src.app.app_component.AppComponent",
      "name": "AppComponent",
      "physicalPath": "src\\app\\app.component.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.adapter.cytoscape.index.CytoscapeComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.GraphStateAction": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.GraphStateActionType": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.adapter.analysis.index.convertToGraphNodes": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.ui.filter.filter_component.FilterComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.ui.json_loader.json_loader_component.JsonLoaderComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.ui.version.version_component.VersionComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.ui.interaction-mode.interaction-mode_component.InteractionModeComponent": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.state_service.StateService": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.app_config.appConfig": {
      "id": "src.app.app_config.appConfig",
      "name": "appConfig",
      "physicalPath": "src\\app\\app.config.ts",
      "nodeType": "VARIABLE",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.app_routes.routes": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.app_routes.routes": {
      "id": "src.app.app_routes.routes",
      "name": "routes",
      "physicalPath": "src\\app\\app.routes.ts",
      "nodeType": "VARIABLE",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.app_component.AppComponent": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.common.utils.addTo": {
      "id": "src.app.common.utils.addTo",
      "name": "addTo",
      "physicalPath": "src\\app\\common\\utils.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.common.utils.replaceIfBigger": {
      "id": "src.app.common.utils.replaceIfBigger",
      "name": "replaceIfBigger",
      "physicalPath": "src\\app\\common\\utils.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.common.utils.getElementOrZeroIfNotExists": {
      "id": "src.app.common.utils.getElementOrZeroIfNotExists",
      "name": "getElementOrZeroIfNotExists",
      "physicalPath": "src\\app\\common\\utils.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.common.utils.sumUpTo": {
      "id": "src.app.common.utils.sumUpTo",
      "name": "sumUpTo",
      "physicalPath": "src\\app\\common\\utils.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.model.GraphEdge.GraphEdge": {
      "id": "src.app.model.GraphEdge.GraphEdge",
      "name": "GraphEdge",
      "physicalPath": "src\\app\\model\\GraphEdge.ts",
      "nodeType": "INTERFACE",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.GraphNode.GraphNode": {
      "id": "src.app.model.GraphNode.GraphNode",
      "name": "GraphNode",
      "physicalPath": "src\\app\\model\\GraphNode.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.ShallowGraphEdge.ShallowGraphEdge": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.GraphNode.VisibleGraphNode": {
      "id": "src.app.model.GraphNode.VisibleGraphNode",
      "name": "VisibleGraphNode",
      "physicalPath": "src\\app\\model\\GraphNode.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.GraphNode": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.GraphNode.getNodeAndAllChildrenRecursively": {
      "id": "src.app.model.GraphNode.getNodeAndAllChildrenRecursively",
      "name": "getNodeAndAllChildrenRecursively",
      "physicalPath": "src\\app\\model\\GraphNode.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.GraphNode": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.GraphNode.getSuccessorIds": {
      "id": "src.app.model.GraphNode.getSuccessorIds",
      "name": "getSuccessorIds",
      "physicalPath": "src\\app\\model\\GraphNode.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.GraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphNode.getNodeAndAllChildrenRecursively": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.GraphNode.recursiveFind": {
      "id": "src.app.model.GraphNode.recursiveFind",
      "name": "recursiveFind",
      "physicalPath": "src\\app\\model\\GraphNode.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.edge_service.EdgeService": {
      "id": "src.app.model.service.edge_service.EdgeService",
      "name": "EdgeService",
      "physicalPath": "src\\app\\model\\service\\edge.service.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.GraphState": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphEdge.GraphEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.getVisibleNodes": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.edgeFilter.EdgeFilterType": {
      "id": "src.app.model.service.edgeFilter.EdgeFilterType",
      "name": "EdgeFilterType",
      "physicalPath": "src\\app\\model\\service\\edgeFilter.ts",
      "nodeType": "ENUM",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.model.service.edgeFilter.EdgeFilter": {
      "id": "src.app.model.service.edgeFilter.EdgeFilter",
      "name": "EdgeFilter",
      "physicalPath": "src\\app\\model\\service\\edgeFilter.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphEdge.GraphEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.EdgeFilterResult": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.edgeFilter.EdgeFilterResult": {
      "id": "src.app.model.service.edgeFilter.EdgeFilterResult",
      "name": "EdgeFilterResult",
      "physicalPath": "src\\app\\model\\service\\edgeFilter.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphEdge.GraphEdge": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.edgeFilter.EdgeType": {
      "id": "src.app.model.service.edgeFilter.EdgeType",
      "name": "EdgeType",
      "physicalPath": "src\\app\\model\\service\\edgeFilter.ts",
      "nodeType": "ENUM",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.model.service.edgeFilter.edgeType": {
      "id": "src.app.model.service.edgeFilter.edgeType",
      "name": "edgeType",
      "physicalPath": "src\\app\\model\\service\\edgeFilter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.edgeFilter.EdgeFilterResult": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.EdgeType": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.edgeFilter.showNoEdges": {
      "id": "src.app.model.service.edgeFilter.showNoEdges",
      "name": "showNoEdges",
      "physicalPath": "src\\app\\model\\service\\edgeFilter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.edgeFilter.EdgeFilter": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphEdge.GraphEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.EdgeFilterResult": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.edgeFilter.showOnlyFeedbackEdges": {
      "id": "src.app.model.service.edgeFilter.showOnlyFeedbackEdges",
      "name": "showOnlyFeedbackEdges",
      "physicalPath": "src\\app\\model\\service\\edgeFilter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.edgeFilter.EdgeFilter": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphEdge.GraphEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.feedbackEdge.isFeedbackEdge": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.edgeFilter.showFeedbackEdgesAndTwistedEdges": {
      "id": "src.app.model.service.edgeFilter.showFeedbackEdgesAndTwistedEdges",
      "name": "showFeedbackEdgesAndTwistedEdges",
      "physicalPath": "src\\app\\model\\service\\edgeFilter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.edgeFilter.EdgeFilter": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphEdge.GraphEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.feedbackEdge.isFeedbackEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.feedbackEdge.isTwistedEdge": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.edgeFilter.showOnlyCyclicEdges": {
      "id": "src.app.model.service.edgeFilter.showOnlyCyclicEdges",
      "name": "showOnlyCyclicEdges",
      "physicalPath": "src\\app\\model\\service\\edgeFilter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.edgeFilter.EdgeFilter": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphEdge.GraphEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.feedbackEdge.isFeedbackEdge": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.edgeFilter.showAllEdges": {
      "id": "src.app.model.service.edgeFilter.showAllEdges",
      "name": "showAllEdges",
      "physicalPath": "src\\app\\model\\service\\edgeFilter.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.edgeFilter.EdgeFilter": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphEdge.GraphEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.feedbackEdge.isTwistedEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.feedbackEdge.isFeedbackEdge": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.feedbackEdge.isPointingUpwards": {
      "id": "src.app.model.service.feedbackEdge.isPointingUpwards",
      "name": "isPointingUpwards",
      "physicalPath": "src\\app\\model\\service\\feedbackEdge.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphEdge.GraphEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphNode.GraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.feedbackEdge.findGreatestCommonAncestor": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.feedbackEdge.findGreatestCommonAncestor": {
      "id": "src.app.model.service.feedbackEdge.findGreatestCommonAncestor",
      "name": "findGreatestCommonAncestor",
      "physicalPath": "src\\app\\model\\service\\feedbackEdge.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.GraphNode": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.feedbackEdge.isTwistedEdge": {
      "id": "src.app.model.service.feedbackEdge.isTwistedEdge",
      "name": "isTwistedEdge",
      "physicalPath": "src\\app\\model\\service\\feedbackEdge.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphEdge.GraphEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.feedbackEdge.isPointingUpwards": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.feedbackEdge.isFeedbackEdge": {
      "id": "src.app.model.service.feedbackEdge.isFeedbackEdge",
      "name": "isFeedbackEdge",
      "physicalPath": "src\\app\\model\\service\\feedbackEdge.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphEdge.GraphEdge": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.feedbackEdge.isPointingUpwards": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.lsmLayouting.PADDING_BETWEEN_NODES": {
      "id": "src.app.model.service.lsmLayouting.PADDING_BETWEEN_NODES",
      "name": "PADDING_BETWEEN_NODES",
      "physicalPath": "src\\app\\model\\service\\lsmLayouting.ts",
      "nodeType": "VARIABLE",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.model.service.lsmLayouting.PADDING_BETWEEN_LEVELS": {
      "id": "src.app.model.service.lsmLayouting.PADDING_BETWEEN_LEVELS",
      "name": "PADDING_BETWEEN_LEVELS",
      "physicalPath": "src\\app\\model\\service\\lsmLayouting.ts",
      "nodeType": "VARIABLE",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.model.service.lsmLayouting.SpaceRequirement": {
      "id": "src.app.model.service.lsmLayouting.SpaceRequirement",
      "name": "SpaceRequirement",
      "physicalPath": "src\\app\\model\\service\\lsmLayouting.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.lsmLayouting.Coordinates": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.lsmLayouting.RelativePositionOfNode": {
      "id": "src.app.model.service.lsmLayouting.RelativePositionOfNode",
      "name": "RelativePositionOfNode",
      "physicalPath": "src\\app\\model\\service\\lsmLayouting.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.lsmLayouting.SpaceRequirement": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel": {
      "id": "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel",
      "name": "calculateRequiredSpaceForLevel",
      "physicalPath": "src\\app\\model\\service\\lsmLayouting.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.lsmLayouting.calculateRequiredSpace": {
          "isCyclic": true,
          "weight": 1
        }
      }
    },
    "src.app.model.service.lsmLayouting.calculateSpaceRequirementsOfChildren": {
      "id": "src.app.model.service.lsmLayouting.calculateSpaceRequirementsOfChildren",
      "name": "calculateSpaceRequirementsOfChildren",
      "physicalPath": "src\\app\\model\\service\\lsmLayouting.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.lsmLayouting.RelativePositionOfNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.lsmLayouting.calculateRequiredSpace": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.lsmLayouting.layoutSubgraph": {
      "id": "src.app.model.service.lsmLayouting.layoutSubgraph",
      "name": "layoutSubgraph",
      "physicalPath": "src\\app\\model\\service\\lsmLayouting.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.lsmLayouting.RelativePositionOfNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.lsmLayouting.calculateSpaceRequirementsOfChildren": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.lsmLayouting.CytoscapeValues": {
      "id": "src.app.model.service.lsmLayouting.CytoscapeValues",
      "name": "CytoscapeValues",
      "physicalPath": "src\\app\\model\\service\\lsmLayouting.ts",
      "nodeType": "VARIABLE",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.model.service.lsmLayouting.Coordinates": {
      "id": "src.app.model.service.lsmLayouting.Coordinates",
      "name": "Coordinates",
      "physicalPath": "src\\app\\model\\service\\lsmLayouting.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.model.service.lsmLayouting.calculateRequiredSpace": {
      "id": "src.app.model.service.lsmLayouting.calculateRequiredSpace",
      "name": "calculateRequiredSpace",
      "physicalPath": "src\\app\\model\\service\\lsmLayouting.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.lsmLayouting.SpaceRequirement": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.lsmLayouting.CytoscapeValues": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.lsmLayouting.calculateRequiredSpaceForLevel": {
          "isCyclic": true,
          "weight": 1
        }
      }
    },
    "src.app.model.service.lsmLayouting.layout": {
      "id": "src.app.model.service.lsmLayouting.layout",
      "name": "layout",
      "physicalPath": "src\\app\\model\\service\\lsmLayouting.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.lsmLayouting.Coordinates": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.lsmLayouting.layoutSubgraph": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.state_service.StateService": {
      "id": "src.app.model.service.state_service.StateService",
      "name": "StateService",
      "physicalPath": "src\\app\\model\\service\\state.service.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.stateHandler.GraphState": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.GraphStateAction": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.buildGraphState": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.graphStateReducer": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.stateHandler.isNodeOrAncestorIgnored": {
      "id": "src.app.model.service.stateHandler.isNodeOrAncestorIgnored",
      "name": "isNodeOrAncestorIgnored",
      "physicalPath": "src\\app\\model\\service\\stateHandler.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.GraphNode": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.stateHandler.toVisibleGraphNode": {
      "id": "src.app.model.service.stateHandler.toVisibleGraphNode",
      "name": "toVisibleGraphNode",
      "physicalPath": "src\\app\\model\\service\\stateHandler.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.GraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.GraphState": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.isNodeOrAncestorIgnored": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.stateHandler.GraphStateActionType": {
      "id": "src.app.model.service.stateHandler.GraphStateActionType",
      "name": "GraphStateActionType",
      "physicalPath": "src\\app\\model\\service\\stateHandler.ts",
      "nodeType": "ENUM",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.model.service.stateHandler.GraphState": {
      "id": "src.app.model.service.stateHandler.GraphState",
      "name": "GraphState",
      "physicalPath": "src\\app\\model\\service\\stateHandler.ts",
      "nodeType": "INTERFACE",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.GraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.EdgeFilter": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.stateHandler.GraphStateAction": {
      "id": "src.app.model.service.stateHandler.GraphStateAction",
      "name": "GraphStateAction",
      "physicalPath": "src\\app\\model\\service\\stateHandler.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.GraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.EdgeFilter": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.stateHandler.graphStateReducer": {
      "id": "src.app.model.service.stateHandler.graphStateReducer",
      "name": "graphStateReducer",
      "physicalPath": "src\\app\\model\\service\\stateHandler.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.stateHandler.GraphState": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.GraphStateAction": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.GraphStateActionType": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.buildGraphState": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphNode.getNodeAndAllChildrenRecursively": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.findGraphNode": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.stateHandler.getVisibleNodes": {
      "id": "src.app.model.service.stateHandler.getVisibleNodes",
      "name": "getVisibleNodes",
      "physicalPath": "src\\app\\model\\service\\stateHandler.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.stateHandler.GraphState": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.isNodeOrAncestorIgnored": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.toVisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.stateHandler.findGraphNode": {
      "id": "src.app.model.service.stateHandler.findGraphNode",
      "name": "findGraphNode",
      "physicalPath": "src\\app\\model\\service\\stateHandler.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.stateHandler.GraphState": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphNode.VisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.toVisibleGraphNode": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.service.stateHandler.buildGraphState": {
      "id": "src.app.model.service.stateHandler.buildGraphState",
      "name": "buildGraphState",
      "physicalPath": "src\\app\\model\\service\\stateHandler.ts",
      "nodeType": "FUNCTION",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.GraphNode.GraphNode": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.GraphState": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.GraphNode.getNodeAndAllChildrenRecursively": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.showOnlyFeedbackEdges": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.model.ShallowGraphEdge.ShallowGraphEdge": {
      "id": "src.app.model.ShallowGraphEdge.ShallowGraphEdge",
      "name": "ShallowGraphEdge",
      "physicalPath": "src\\app\\model\\ShallowGraphEdge.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.ui.filter.filter_component.FilterComponent": {
      "id": "src.app.ui.filter.filter_component.FilterComponent",
      "name": "FilterComponent",
      "physicalPath": "src\\app\\ui\\filter\\filter.component.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.model.service.stateHandler.GraphStateAction": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.EdgeFilterType": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.EdgeFilter": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.stateHandler.GraphStateActionType": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.showAllEdges": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.showNoEdges": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.showOnlyCyclicEdges": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.showOnlyFeedbackEdges": {
          "isCyclic": false,
          "weight": 1
        },
        "src.app.model.service.edgeFilter.showFeedbackEdgesAndTwistedEdges": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.ui.interaction-mode.interaction-mode_component.InteractionModeComponent": {
      "id": "src.app.ui.interaction-mode.interaction-mode_component.InteractionModeComponent",
      "name": "InteractionModeComponent",
      "physicalPath": "src\\app\\ui\\interaction-mode\\interaction-mode.component.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.ui.json_loader.json_loader_component.JsonLoaderComponent": {
      "id": "src.app.ui.json_loader.json_loader_component.JsonLoaderComponent",
      "name": "JsonLoaderComponent",
      "physicalPath": "src\\app\\ui\\json.loader\\json.loader.component.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {}
    },
    "src.app.ui.version.version_component.VersionComponent": {
      "id": "src.app.ui.version.version_component.VersionComponent",
      "name": "VersionComponent",
      "physicalPath": "src\\app\\ui\\version\\version.component.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {
        "src.app.ui.version.version_service.VersionService": {
          "isCyclic": false,
          "weight": 1
        }
      }
    },
    "src.app.ui.version.version_service.VersionService": {
      "id": "src.app.ui.version.version_service.VersionService",
      "name": "VersionService",
      "physicalPath": "src\\app\\ui\\version\\version.service.ts",
      "nodeType": "CLASS",
      "language": "TYPESCRIPT",
      "dependencies": {}
    }
  }
}
